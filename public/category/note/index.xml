<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>noteonRandom Geekery</title>
    <link>https://randomgeekery.org/category/note/</link>
    <description>
      Recent contentinnote on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Wed, 25 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://randomgeekery.org/category/note/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: Revisiting an old layout</title>
  <link>https://randomgeekery.org/post/2023/10/revisiting-an-old-layout/</link>
  <pubDate>Wed, 25 Oct 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/10/revisiting-an-old-layout/</guid>
  <description>I’m not saying it’s good. I’m not saying I’ll stick with it. I just wanted to pull solidly away from the utility-class CSS I was using for a while there. Got real hard to tweak.
So for the moment, a slightly tweaked layout I used regularly a couple years ago.</description>
   <category>post</category> 
   <category>note</category> 
   <category>site</category> 
  <content:encoded><![CDATA[<p>I&rsquo;m not saying it&rsquo;s good. I&rsquo;m not saying I&rsquo;ll stick with it. I just wanted to pull solidly away from the utility-class CSS I was using for a while there. Got real hard to tweak.</p>
<p>So for the moment, a slightly tweaked layout I used regularly a couple years ago.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Watching: The Densest City on Earth</title>
  <link>https://randomgeekery.org/post/2023/09/watching-the-densest-city-on-earth/</link>
  <pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/09/watching-the-densest-city-on-earth/</guid>
  <description>via Aeon.
This video essay traces the history of Kowloon Walled City from its origins as a small 17th-century military outpost to today, where it lives on in the popular imagination through films, video games and an ongoing fascination with this unlikely makeshift society.
The idea of Kowloon fascinates me. Course, by the time I heard of Kowloon it was being torn down. But once you’re aware of it you see it everywhere, used as handy sci-fi metaphor.</description>
   <category>post</category> 
   <category>note</category> 
   <category>watch</category>  <category>history</category> 
  <content:encoded><![CDATA[<p>via <a href="https://aeon.co/videos/the-rise-and-fall-of-kowloon-walled-city-hong-kongs-infamous-urban-monolith">Aeon</a>.</p>
<blockquote>
<p>This video essay traces the history of Kowloon Walled City from its origins as a small 17th-century military outpost to today, where it lives on in the popular imagination through films, video games and an ongoing fascination with this unlikely makeshift society.</p>
</blockquote>
<p><img src="https://www.youtube.com/watch?v=4YuNvIfM-YA"/></p>
<p>The idea of Kowloon fascinates me. Course, by the time I heard of Kowloon it was being torn down. But once you’re aware of it you see it everywhere, used as handy sci-fi metaphor.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: pulled in the tumblelog</title>
  <link>https://randomgeekery.org/post/2023/09/pulled-in-the-tumblelog/</link>
  <pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/09/pulled-in-the-tumblelog/</guid>
  <description>All my tumblelog pages are notes on this blog now. Any time my personal site count goes past 1, the friction ramps up quick. They all end up going a little stale.
So that’s one less site to worry about.</description>
   <category>post</category> 
   <category>note</category> 
   <category>site</category> 
  <content:encoded><![CDATA[<p>All my <a href="/post/2022/05/how-about-a-tumblelog/">tumblelog</a> pages are notes on <em>this</em> blog now. Any time my personal site count goes past 1, the friction ramps up quick. They all end up going a little stale.</p>
<p>So that’s one less site to worry about.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Dream Aesthetic</title>
  <link>https://randomgeekery.org/post/2023/08/dream-aesthetic/</link>
  <pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/08/dream-aesthetic/</guid>
  <description>Bedtime drawing. An hour or so every night or so, for a few months. Helps me wind down from the day.
Usually that’s all it’s for, but my wife liked the finished product. So hey it’s on Design by Hümans if you need a new sweatshirt or something! I did this in Linea Sketch, which has a fixed canvas size. Better start using Procreate or Infinite Painter – and a larger canvas – just in case she wants the next one on a duvet.</description>
   <category>post</category> 
   <category>note</category> 
   <category>art</category>  <category>symmetry</category>  <category>linea-sketch</category>  <category>bedtime-drawing</category> 
  <content:encoded><![CDATA[<p><img src="/post/2023/08/../../../attachments/img/2023/cover-2023-08-29.png" alt="attachments/img/2023/cover-2023-08-29.png"/></p>
<p>Bedtime drawing. An hour or so every night or so, for a few months. Helps me wind down from the day.</p>
<p>Usually that’s all it’s for, but my wife liked the finished product. So hey it’s on <a href="https://www.designbyhumans.com/shop/pullover-hoodie/dream-aesthetic/1924278/">Design by Hümans</a> if you need a new sweatshirt or something! I did this in <a href="https://linea-app.com/">Linea Sketch</a>, which has a fixed canvas size. Better start using Procreate or Infinite Painter – and a larger canvas – just in case she wants the next one on a duvet.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Save those links</title>
  <link>https://randomgeekery.org/post/2023/07/save-those-links/</link>
  <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/07/save-those-links/</guid>
  <description>Saw this post today:
{% quote from=&#34;@n4@freeradical.zone&#34; cite=“https://freeradical.zone/@n4/110636140651779144&#34; %}
My greatest advice to those concerned: Start archiving. If you come across something you believe is valuable: make a copy.
If you follow a guide on how to install and configure software and you found it helpful: make a copy.
If you come across a video you really enjoy and find yourself coming back to again and again: make a copy.</description>
   <category>post</category> 
   <category>note</category> 
   <category>the-internet</category>  <category>second-brain</category> 
  <content:encoded><![CDATA[<p>Saw this post today:</p>
<p>{% quote
from=&quot;@n4@freeradical.zone&quot;
cite=&ldquo;<a href="https://freeradical.zone/@n4/110636140651779144%22">https://freeradical.zone/@n4/110636140651779144"</a>
%}</p>
<p>My greatest advice to those concerned: Start archiving. If you come across something you believe is valuable: make a copy.</p>
<p>If you follow a guide on how to install and configure software and you found it helpful: make a copy.</p>
<p>If you come across a video you really enjoy and find yourself coming back to again and again: make a copy.</p>
<p>If it means anything to you: make a copy, or you’ll wish you did.
{% /quote %}</p>
<p>That prompted me to quote-share with my own suggestions:</p>
<p>{% quote
from=&quot;@randomgeek@ack.cringe.cafe&rdquo;
%}
Plain old link rot prompted my PKM habits. Twitter, Reddit, etc. are now putting Hanlon’s razor to the test, so it’s a good time to try it yourself.</p>
<p><a href="https://capacities.io">Capacities</a> provides excellent link archiving capabilities, but you gotta trust the online-only aspect.</p>
<p>Browser extensions such as <a href="https://github.com/deathau/markdownload">MarkDownload</a> can grab page content to paste into Markdown-friendly note tools like ObsidianMD and Logseq. If you prefer CLI, <a href="https://xwmx.github.io/nb/">nb</a> archives every link you bookmark with it.</p>
<p>Course, in all cases process those notes to the useful bits. Otherwise you’re just data hoarding. Understandable in this Digital Depression, but not helpful.
{% /quote %}</p>
<p>And then it occurred to me. Between budget and attention span constraints, my <a href="https://akkoma.social">Akkoma</a> instance — the one I posted that from — could die at any minute. Maybe I should follow my advice and put that note somewhere more persistent. First my notes, and then this blog.</p>
<p>So there’s my productivity quota for the day more or less complete.</p>
<blockquote>
<p><strong>2023-10-25</strong></p>
<p>Sure enough I had to take down my Akkoma instance recently for budget prioritization.</p>
</blockquote>
]]></content:encoded>
</item>
<item>
  <title>Post: Added site search via Pagefind</title>
  <link>https://randomgeekery.org/post/2023/06/added-site-search-via-pagefind/</link>
  <pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/06/added-site-search-via-pagefind/</guid>
  <description>Internet search exists so you can find cats
Okay it’s JavaScript-powered. If you don’t have JS you won’t even see the search bar. Besides that Pagefind is pretty darn good! I can put off organizing the site a little longer.</description>
   <category>post</category> 
   <category>note</category> 
   <category>site</category> 
  <content:encoded><![CDATA[<p><img src="/post/2023/06/../../../attachments/img/2023/cover-2023-06-20.png" alt="attachments/img/2023/cover-2023-06-20.png"/>
Internet search exists so you can find cats</p>
<p>Okay it’s JavaScript-powered. If you don’t have JS you won’t even see the search bar. Besides that <a href="https://pagefind.app">Pagefind</a> is pretty darn good! I can put off organizing the site a little longer.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Watching (the cat in): The Future is a Dead Mall</title>
  <link>https://randomgeekery.org/post/2023/06/watching-the-cat-in-the-future-is-a-dead-mall/</link>
  <pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/06/watching-the-cat-in-the-future-is-a-dead-mall/</guid>
  <description>Decentraland as a sad shadow of Second Life. Non-tech folks reporting on it from the perspective of maybe they’re missing something — but there’s nothing to miss. Oh and the wallet-based voting. More committees than a liberal arts college town’s anarchist collective. Ugh.
But the cat on the couch is the real star of the show.</description>
   <category>post</category> 
   <category>note</category> 
   <category>watch</category>  <category>cats</category>  <category>vr</category>  <category>crypto</category> 
  <content:encoded><![CDATA[<p>Decentraland as a sad shadow of Second Life. Non-tech folks reporting on it from the perspective of maybe they’re missing something — but there’s nothing to miss. Oh and the wallet-based voting. More committees than a liberal arts college town’s anarchist collective. Ugh.</p>
<p>But the cat on the couch is the real star of the show.</p>
<p><img src="https://www.youtube.com/watch?v=EiZhdpLXZ8Q"/></p>
]]></content:encoded>
</item>
<item>
  <title>Post: Reading: What developers with ADHD want you to know</title>
  <link>https://randomgeekery.org/post/2023/06/reading-what-developers-with-adhd-want-you-to-know/</link>
  <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/06/reading-what-developers-with-adhd-want-you-to-know/</guid>
  <description>Installed Ruby on the most recent EndeavourOS 1 install so I could run my script that adds a post to my site’s primary Hugo iteration as I work on a Gatsby iteration of the site so I can convincingly claim knowledge of React 2 when talking to recruiters during this year’s interminable job search so I can get a new job and maybe get back on ADHD meds and maybe occasionally focus on one thing at a time and — um — where was I?</description>
   <category>post</category> 
   <category>note</category> 
   <category>adhd</category>  <category>read</category> 
  <content:encoded><![CDATA[<p>Installed <a href="https://www.ruby-lang.org/en/">Ruby</a> on the most recent <a href="https://endeavouros.com">EndeavourOS</a> <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> install so I could run my script that adds a post to my site&rsquo;s primary <a href="https://gohugo.io">Hugo</a> iteration as I work on a <a href="https://www.gatsbyjs.com">Gatsby</a> iteration of the site so I can convincingly claim knowledge of <a href="https://react.dev">React</a> <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> when talking to recruiters during this year&rsquo;s interminable <a href="https://www.linkedin.com/in/brianwisti/">job search</a> so I can get a new job and maybe get back on <a href="/card/adhd/">ADHD</a> meds and maybe occasionally focus on one thing at a time and — um — where was I?</p>
<p>Oh right! I saw an interesting post!</p>
<p>{% quote
cite=&ldquo;<a href="https://stackoverflow.blog/2023/06/05/what-developers-with-adhd-want-you-to-know/%22">https://stackoverflow.blog/2023/06/05/what-developers-with-adhd-want-you-to-know/"</a>
title=&ldquo;What developers with ADHD want you to know - Stack Overflow Blog&rdquo;
%}
In fact, ADHD is an invisible disability, which is exactly what it sounds like: “a physical, mental or neurological condition that is not visible from the outside, yet can limit or challenge a person’s movements, senses, or activities” (Invisible Disabilities Association). Plenty of forms of neurodivergence, including autism spectrum disorder, depression, anxiety, OCD, PTSD (post-traumatic stress disorder), and learning differences can be considered invisible disabilities.
{% /quote %}</p>
<p>It&rsquo;s not in-depth or anything, but offers a little pushback to the &ldquo;ADHD is a superpower&rdquo; myth. That myth is handy for the occasional self-help pep talk — &ldquo;I&rsquo;m good enough. I&rsquo;m smart enough. And gosh-darn it, this funky brain wiring is a superpower!&rdquo; — but it&rsquo;s not true. The self-awareness and arsenal of coping techniques like task automation can look impressive to the untrained eye.
Those only give roughly the same functionality as a normal person going about a normal day. And oh goodness if you&rsquo;re in a context where those techniques aren&rsquo;t helpful? You&rsquo;ve got unpartitioned tasks with a poorly defined goal that is important and kinda urgent, but stretched over months?<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> The floundering.</p>
<p>And let&rsquo;s not even get into the <a href="https://www.psychologytoday.com/us/blog/your-way-adhd/202106/adhd-and-rejection-sensitivity-dysphoria">Rejection Sensitivity Dysphoria (RSD)</a> aspect.</p>
<p>Anyways the dog needs to go out and I should probably eat breakfast and I think I mentioned something about React. Back to it!</p>
<p>And maybe check email.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>because I accidentally killed my Windows install and haven&rsquo;t had sufficient executive function to fix it&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>I&rsquo;ve used React at work some, but my brain needs the ritual of incorporating a tool or framework into my site building work flow before it&rsquo;ll let me say &ldquo;yes I know that&rdquo;&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>like job hunting for example&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded>
</item>
<item>
  <title>Post: A Fun Python Turtle YouTube Playlist</title>
  <link>https://randomgeekery.org/post/2023/05/a-fun-python-turtle-youtube-playlist/</link>
  <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/05/a-fun-python-turtle-youtube-playlist/</guid>
  <description>I went a bit past the videos
Got a little bored of trying to build relevant skills for my ongoing job search. Went through Coding Cassowary’s Generative Art playlist yesterday instead. Had some ideas and fiddled a bit more with those ideas today. Trees should have leaves usually, right?
I’ll share the code, but only if you promise to remember this is my brain adding unsorted thoughts to code from the aforementioned playlist.</description>
   <category>post</category> 
   <category>note</category> 
   <category>python</category>  <category>art</category> 
  <content:encoded><![CDATA[<p><img src="/post/2023/05/../../../attachments/img/2023/cover-2023-05-20.png" alt="attachments/img/2023/cover-2023-05-20.png"/>
I went a bit past the videos</p>
<p>Got a little bored of trying to build relevant skills for my ongoing job search.
Went through Coding Cassowary&rsquo;s <a href="https://www.youtube.com/playlist?list=PLBLV84VG7Md9oO4MUOhyqz7gBFOzx8XIw">Generative Art playlist</a> yesterday instead. Had some ideas and fiddled a bit more with those ideas today. Trees should have leaves usually, right?</p>
<p>I&rsquo;ll share the code, but only if you promise to remember this is my brain adding unsorted thoughts to code from the aforementioned playlist. Most of the thoughts in here are unfinished. What I <em>want</em> is for you to watch the playlist.
And have some fun drawing with <a href="/card/python/">Python</a>, using <a href="https://docs.python.org/3/library/turtle.html">Turtle</a> or some other library.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;Draw a fractal tree.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">random</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="n">Screen</span><span class="p">,</span> <span class="n">Turtle</span><span class="p">,</span> <span class="n">_Screen</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">typing</span> <span class="kn">import</span> <span class="n">Optional</span><span class="p">,</span> <span class="n">Tuple</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">RGBColor</span> <span class="o">=</span> <span class="n">Tuple</span><span class="p">[</span><span class="nb">float</span><span class="p">,</span> <span class="nb">float</span><span class="p">,</span> <span class="nb">float</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">COLOR_CANVAS_DEFAULT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mi">232</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">210</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">210</span> <span class="o">/</span> <span class="mi">255</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_PEN_DEFAULT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mi">94</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">71</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">69</span> <span class="o">/</span> <span class="mi">255</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_SKY_LIGHT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.53</span><span class="p">,</span> <span class="mf">0.81</span><span class="p">,</span> <span class="mf">0.92</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_SKY_DARK</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.008</span><span class="p">,</span> <span class="mf">0.043</span><span class="p">,</span> <span class="mf">0.059</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_TRUNK_BASE</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.26</span><span class="p">,</span> <span class="mf">0.16</span><span class="p">,</span> <span class="mf">0.11</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_TRUNK_LIGHT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.96</span><span class="p">,</span> <span class="mf">0.86</span><span class="p">,</span> <span class="mf">0.81</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">set_theme</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="p">:</span> <span class="n">_Screen</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">canvas_width</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">canvas_height</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">canvas_color</span><span class="o">=</span><span class="n">COLOR_CANVAS_DEFAULT</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">pen_color</span><span class="o">=</span><span class="n">COLOR_PEN_DEFAULT</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">thickness</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">speed_value</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">tracer_value</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">hide_turtle</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Set properties for the current drawing.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="n">canvas_width</span><span class="p">,</span> <span class="n">canvas_height</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">bgcolor</span><span class="p">(</span><span class="n">canvas_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">pen_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">width</span><span class="p">(</span><span class="n">thickness</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">speed</span><span class="p">(</span><span class="n">speed_value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">tracer</span><span class="p">(</span><span class="n">tracer_value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">hide_turtle</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">turtle</span><span class="o">.</span><span class="n">hideturtle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">draw_leaf</span><span class="p">(</span><span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a single leaf.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">leaf_color</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.75</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">leaf_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">begin_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">circle</span><span class="p">(</span><span class="mf">4.0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">end_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">COLOR_TRUNK_BASE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="n">decrease</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="n">noise</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a single tree segment.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">length</span> <span class="o">&lt;=</span> <span class="mi">8</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">draw_leaf</span><span class="p">(</span><span class="n">turtle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">length_factor</span> <span class="o">=</span> <span class="n">length</span> <span class="o">/</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">    <span class="n">trunk_color</span> <span class="o">=</span> <span class="n">lighten_trunk</span><span class="p">(</span><span class="n">length_factor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">trunk_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">width</span><span class="p">(</span><span class="n">length_factor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">length</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">new_length</span> <span class="o">=</span> <span class="n">length</span> <span class="o">*</span> <span class="n">decrease</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">noise</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">new_length</span> <span class="o">*=</span> <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.9</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">angle_l</span> <span class="o">=</span> <span class="n">angle</span> <span class="o">+</span> <span class="n">random</span><span class="o">.</span><span class="n">gauss</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">angle_r</span> <span class="o">=</span> <span class="n">angle</span> <span class="o">+</span> <span class="n">random</span><span class="o">.</span><span class="n">gauss</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="n">angle_l</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span> <span class="n">new_length</span><span class="p">,</span> <span class="n">decrease</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="n">angle_l</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="n">angle_r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span> <span class="n">new_length</span><span class="p">,</span> <span class="n">decrease</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="n">angle_r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">backward</span><span class="p">(</span><span class="n">length</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">fit_color</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">rgb</span><span class="p">:</span> <span class="n">RGBColor</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">minimum_rgb</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">RGBColor</span><span class="p">]</span> <span class="o">=</span> <span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">maximum_rgb</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">RGBColor</span><span class="p">]</span> <span class="o">=</span> <span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Ensure color fits within an allowed RGB range.&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">fitted_color</span> <span class="o">=</span> <span class="n">rgb</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">minimum_rgb</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">fitted_color</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="nb">min</span><span class="p">(</span><span class="n">minimum_rgb</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">min</span><span class="p">(</span><span class="n">minimum_rgb</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">min</span><span class="p">(</span><span class="n">minimum_rgb</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">maximum_rgb</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">fitted_color</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="nb">max</span><span class="p">(</span><span class="n">maximum_rgb</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">max</span><span class="p">(</span><span class="n">maximum_rgb</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">max</span><span class="p">(</span><span class="n">maximum_rgb</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fitted_color</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">draw_sky</span><span class="p">(</span><span class="n">screen</span><span class="p">:</span> <span class="n">_Screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a fractured sky.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">size</span> <span class="o">=</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">    <span class="n">noise</span> <span class="o">=</span> <span class="mf">0.0</span>
</span></span><span class="line"><span class="cl">    <span class="n">x_edge</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_width</span><span class="p">()</span> <span class="o">//</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">y_edge</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_height</span><span class="p">()</span> <span class="o">//</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="n">y_edge</span><span class="p">,</span> <span class="n">y_edge</span><span class="p">,</span> <span class="n">size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="n">x_edge</span><span class="p">,</span> <span class="n">x_edge</span><span class="p">,</span> <span class="n">size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># move to the location</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">penup</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">goto</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># rotate</span>
</span></span><span class="line"><span class="cl">            <span class="n">angle</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="o">-</span><span class="n">noise</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">noise</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">noise_factor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="p">(</span><span class="n">y_edge</span> <span class="o">-</span> <span class="n">y</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span>
</span></span><span class="line"><span class="cl">                <span class="n">sky_color</span> <span class="o">=</span> <span class="n">darken_sky</span><span class="p">(</span><span class="n">noise_factor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">sky_color</span> <span class="o">=</span> <span class="n">COLOR_SKY_DARK</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">pendown</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">COLOR_SKY_DARK</span><span class="p">,</span> <span class="n">sky_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">begin_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="n">angle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># draw square</span>
</span></span><span class="line"><span class="cl">            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="n">angle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">end_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">noise</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">draw_tree</span><span class="p">(</span><span class="n">screen</span><span class="p">:</span> <span class="n">_Screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw one tree.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># start at the bottom edge, off-center for visual interest</span>
</span></span><span class="line"><span class="cl">    <span class="n">y_edge</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_height</span><span class="p">()</span> <span class="o">/</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">trunk_x</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_width</span><span class="p">()</span> <span class="o">/</span> <span class="mi">4</span> <span class="o">*</span> <span class="o">-</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">penup</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">goto</span><span class="p">(</span><span class="n">trunk_x</span><span class="p">,</span> <span class="o">-</span><span class="n">y_edge</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">pendown</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span> <span class="mi">140</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="n">noise</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">darken_sky</span><span class="p">(</span><span class="n">noise_factor</span><span class="p">:</span> <span class="nb">float</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Manages a gradual darkening of sky squares.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sky_color</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">value</span> <span class="o">-</span> <span class="n">noise_factor</span> <span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">COLOR_SKY_LIGHT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fit_color</span><span class="p">(</span><span class="n">sky_color</span><span class="p">,</span> <span class="n">maximum_rgb</span><span class="o">=</span><span class="n">COLOR_SKY_DARK</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">lighten_trunk</span><span class="p">(</span><span class="n">length_factor</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Manages a gradual lightening of the trunk&#39;s color.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">color_factor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="n">length_factor</span>
</span></span><span class="line"><span class="cl">    <span class="n">trunk_color</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">value</span> <span class="o">+</span> <span class="n">color_factor</span> <span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">COLOR_TRUNK_BASE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fit_color</span><span class="p">(</span><span class="n">trunk_color</span><span class="p">,</span> <span class="n">minimum_rgb</span><span class="o">=</span><span class="n">COLOR_TRUNK_LIGHT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a tree.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">set_theme</span><span class="p">(</span><span class="n">screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">,</span> <span class="n">canvas_width</span><span class="o">=</span><span class="mi">1920</span><span class="p">,</span> <span class="n">canvas_height</span><span class="o">=</span><span class="mi">1080</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">draw_sky</span><span class="p">(</span><span class="n">screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">draw_tree</span><span class="p">(</span><span class="n">screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">tracer</span><span class="p">(</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">exitonclick</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">main</span><span class="p">()</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
<item>
  <title>Post: A Knitted Washcloth</title>
  <link>https://randomgeekery.org/post/2023/04/a-knitted-washcloth/</link>
  <pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/04/a-knitted-washcloth/</guid>
  <description>it may not be much but I made it
A washcloth on its own is no big deal, but it’s been a while since I finished any knitting.
This particular washcloth pattern came printed inside the wrapper of some Lily Sugar’n Cream yarn, of the “Fruit Punch” color variety. Fairly straightforward pattern but even so I think I did more yarn-overs than on any project that comes to mind.</description>
   <category>post</category> 
   <category>note</category> 
   <category>knitting</category>  <category>it-s-been-84-years</category>  <category>okay-maybe-two</category> 
  <content:encoded><![CDATA[<p><img src="/post/2023/04/../../../attachments/img/2023/cover-2023-04-23.jpg" alt="attachments/img/2023/cover-2023-04-23.jpg"/>
it may not be much but I made it</p>
<p>A washcloth on its own is no big deal, but it&rsquo;s been a <em>while</em> since I finished any knitting.</p>
<p>This particular washcloth pattern came printed inside the wrapper of some Lily <a href="https://www.yarnspirations.com/lily-sugarn-cream-ombres-yarn/102002.html">Sugar&rsquo;n Cream</a> yarn, of the &ldquo;Fruit Punch&rdquo; color variety. Fairly straightforward pattern but even so I think I did more yarn-overs than on any project that comes to mind.</p>
]]></content:encoded>
</item>
</channel>
</rss>
