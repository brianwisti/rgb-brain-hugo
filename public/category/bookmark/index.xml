<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>bookmarkonRandom Geekery</title>
    <link>https://randomgeekery.org/category/bookmark/</link>
    <description>
      Recent contentinbookmark on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Sun, 28 Feb 2021 00:00:00 -0800</lastBuildDate><atom:link href="https://randomgeekery.org/category/bookmark/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: Playwright for Python</title>
  <link>https://randomgeekery.org/post/2021/02/playwright-dev/</link>
  <pubDate>Sun, 28 Feb 2021 00:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2021/02/playwright-dev/</guid>
  <description>There’s a card/Python interface to the very handy Playwright browser automation library. The 1.9.x releases feel more Pythonic. Naming conventions, stuff like that. Feels much less like just a wrapper.
Don’t forget to install browser drivers whenever you install or upgrade Playwright!
$ python -m playwright install With pytest The pytest-playwright plugin provides fixtures, marks, and extra pytest args for browser testing. So far the only fixture I’ve used is page, the stand-in for a default browser session.</description>
   <category>post</category> 
   <category>bookmark</category> 
   <category>python</category>  <category>testing</category>  <category>browser-testing</category> 
  <content:encoded><![CDATA[<h2>Cross-browser end-to-end testing for modern web apps</h2><p>There&rsquo;s a <a href="/card/python/">card/Python</a> interface to the very handy <a href="https://playwright.dev">Playwright</a> browser automation library. The 1.9.x releases feel more Pythonic. Naming conventions, stuff like that. Feels much less like just a wrapper.</p>
<p>Don&rsquo;t forget to install browser drivers whenever you install or upgrade Playwright!</p>
<figure class="highlight">
  <pre tabindex="0"
    ><code class="language-" data-lang=""
      >$ python -m playwright install</code></pre>
</figure><h2 id="with-pytest">With pytest</h2>
<p>The <a href="https://github.com/microsoft/playwright-pytest">pytest-playwright</a> plugin provides fixtures, marks, and extra <code>pytest</code> args for browser testing. So far the only fixture I&rsquo;ve used is <code>page</code>, the stand-in for a default browser session. Pairs nicely with <a href="https://pytest-django.readthedocs.io/">pytest-django</a>&rsquo;s <code>live_server</code> fixture.</p>
<p>Headless by default, but use <code>pytest --headful</code> if you want to watch the browser do its thing.</p>
<blockquote>
<p><strong>WARNING</strong></p>
<p>Since pytest-playwright is still in <em>early</em> days — 0.0.12 as of this bookmark date — dependency managers might not acknowledge new releases. Watch the repo and manually update your dependencies when you see a new release.</p>
</blockquote>
]]></content:encoded>
</item>
<item>
  <title>Post: Project dependencies in Julia</title>
  <link>https://randomgeekery.org/post/2020/12/bkamins-github-io/</link>
  <pubDate>Wed, 23 Dec 2020 00:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/12/bkamins-github-io/</guid>
  <description>Step by step breakdown for setting up a project environment in card/Julia, using the REPL. I’ve only been looking close at Julia for a couple days, but they sure do love their REPL!
My practices for managing project dependencies in Julia</description>
   <category>post</category> 
   <category>bookmark</category> 
   <category>julialang</category> 
  <content:encoded><![CDATA[<p>Step by step breakdown for setting up a project environment in <a href="/card/julia/">card/Julia</a>, using the REPL. I&rsquo;ve only been looking close at Julia for a couple days, but they sure do love their REPL!</p>
<p><a href="https://bkamins.github.io/julialang/2020/05/18/project-workflow.html">My practices for managing project dependencies in Julia</a></p>
]]></content:encoded>
</item>
<item>
  <title>Post: Emacs in a Box</title>
  <link>https://randomgeekery.org/post/2020/12/caiorss-github-io/</link>
  <pubDate>Sun, 13 Dec 2020 00:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/12/caiorss-github-io/</guid>
  <description>Emacs In a Box - Elisp Programming and Customization
Maybe the bookmark should have been to the Elisp Snippets page. That’s the one I keep going back to. The whole site is a well-organized collection of notes on using and extending Emacs.</description>
   <category>post</category> 
   <category>bookmark</category> 
   <category>emacs</category>  <category>elisp</category> 
  <content:encoded><![CDATA[<p><a href="https://caiorss.github.io/Emacs-Elisp-Programming/">Emacs In a Box - Elisp Programming and Customization</a></p>
<p>Maybe the bookmark should have been to the <a href="https://caiorss.github.io/Emacs-Elisp-Programming/Elisp_Snippets.html">Elisp Snippets</a> page.
That&rsquo;s the one I keep going back to. The whole site is a well-organized collection of notes on using and extending <a href="/card/emacs/">Emacs</a>.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Emacs Prelude Documentation</title>
  <link>https://randomgeekery.org/post/2020/12/prelude-emacsredux-com/</link>
  <pubDate>Tue, 08 Dec 2020 00:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/12/prelude-emacsredux-com/</guid>
  <description>Home - Prelude: A sleek, modern, simple and powerful Emacs experience for everyone
A starter kit for Emacs</description>
   <category>post</category> 
   <category>bookmark</category> 
   <category>emacs</category> 
  <content:encoded><![CDATA[<p><a href="https://prelude.emacsredux.com">Home - Prelude: A sleek, modern, simple and powerful Emacs experience for everyone</a></p>
<p>A starter kit for <a href="/card/emacs/">Emacs</a></p>
]]></content:encoded>
</item>
<item>
  <title>Post: Command Line Interface Guidelines</title>
  <link>https://randomgeekery.org/post/2020/12/clig-dev/</link>
  <pubDate>Sat, 05 Dec 2020 00:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/12/clig-dev/</guid>
  <description>Command Line Interface Guidelines
An open-source guide to help you write better command-line programs, taking traditional UNIX principles and updating them for the modern day.</description>
   <category>post</category> 
   <category>bookmark</category> 
   <category>cli</category>  <category>shell</category>  <category>ux</category> 
  <content:encoded><![CDATA[<p><a href="https://clig.dev/">Command Line Interface Guidelines</a></p>
<blockquote>
<p>An open-source guide to help you write better command-line programs, taking traditional UNIX principles and updating them for the modern day.</p>
</blockquote>
]]></content:encoded>
</item>
<item>
  <title>Post: IndieWeb bookmarking reference</title>
  <link>https://randomgeekery.org/post/2020/12/bookmark-indieweb/</link>
  <pubDate>Fri, 04 Dec 2020 00:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/12/bookmark-indieweb/</guid>
  <description>Not formally part of card/microformats, but I need it for ideas on how to format my bookmarks.
bookmark — IndieWeb</description>
   <category>post</category> 
   <category>bookmark</category> 
   <category>indieweb</category> 
  <content:encoded><![CDATA[<p>Not formally part of <a href="/card/microformats/">card/microformats</a>, but I need it for ideas on how to format my bookmarks.</p>
<p><a href="https://indieweb.org/bookmark">bookmark — IndieWeb</a></p>
]]></content:encoded>
</item>
</channel>
</rss>
