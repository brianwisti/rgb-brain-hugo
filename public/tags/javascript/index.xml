<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>javascriptonRandom Geekery</title>
    <link>https://randomgeekery.org/tags/javascript/</link>
    <description>
      Recent contentinjavascript on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Fri, 03 Sep 2021 00:00:00 -0700</lastBuildDate><atom:link href="https://randomgeekery.org/tags/javascript/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: Saving some MyST Markdown blogging links for later</title>
  <link>https://randomgeekery.org/post/2021/09/saving-some-myst-markdown-blogging-links-for-later/</link>
  <pubDate>Fri, 03 Sep 2021 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2021/09/saving-some-myst-markdown-blogging-links-for-later/</guid>
  <description>Got distracted by a note from @choldgraf about MyST, a Markdown flavor aimed at technical writing, in a Twitter conversation that was not specifically about MyST.
Two things you may be interested in:
Markdown in Sphinx : https://t.co/52Rj05JsqV
Automatically rebuild are load docs in sphinx: https://t.co/9lvFyCbB0W
Pydata theme: https://t.co/9qXss5cN15
Lots of other nice themes here: https://t.co/27G9oawNVu
— Chris Holdgraf (@choldgraf) September 3, 2021 This distracted me from the NuxtJS blog idea that was distracting me from a card/Nikola blog idea that was distracting me from an attempt at porting my site to card/Astro that was distracting me from a card/Nanoc-in-Python project idea that was distracting me from preparing a client site proposal that was distracting me from Labor Day weekend prep that was distracting me from the work chat that was distracting me from work.</description>
   <category>post</category> 
   <category>post</category> 
   <category>markdown</category>  <category>python</category>  <category>javascript</category>  <category>plugins</category>  <category>distractions</category>  <category>tools</category> 
  <content:encoded><![CDATA[<h2>Because structured Markdown is an easier SSG target than reStructuredText</h2><p>Got distracted by a note from <a href="https://twitter.com/choldgraf">@choldgraf</a> about <a href="https://myst-parser.readthedocs.io/en/latest/">MyST</a>, a Markdown flavor aimed at technical writing, in a <a href="https://twitter.com/willmcgugan/status/1433735471323099139">Twitter conversation</a> that was not specifically about MyST.</p>
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Two things you may be interested in:<br><br>Markdown in Sphinx : <a href="https://t.co/52Rj05JsqV">https://t.co/52Rj05JsqV</a><br><br>Automatically rebuild are load docs in sphinx: <a href="https://t.co/9lvFyCbB0W">https://t.co/9lvFyCbB0W</a><br><br>Pydata theme: <a href="https://t.co/9qXss5cN15">https://t.co/9qXss5cN15</a><br><br>Lots of other nice themes here: <a href="https://t.co/27G9oawNVu">https://t.co/27G9oawNVu</a></p>&mdash; Chris Holdgraf (@choldgraf) <a href="https://twitter.com/choldgraf/status/1433802076438482949?ref_src=twsrc%5Etfw">September 3, 2021</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>This distracted me from the <a href="https://nuxtjs.org/">NuxtJS</a> blog idea that was distracting me from a <a href="/card/nikola/">card/Nikola</a> blog idea that was distracting me from an attempt at porting my site to <a href="/card/astro/">card/Astro</a> that was distracting me from a <a href="/card/nanoc/">card/Nanoc</a>-in-Python project idea that was distracting me from preparing a client site proposal that was distracting me from Labor Day weekend prep that was distracting me from the work chat that was distracting me from work.</p>
<p>I had a question about using MyST for blogging, but decided to look it up for myself. Then I was going to tweet it but got distracted by the thought that I needed more persistent record what with all the distraction.</p>
<p>The question I almost tweeted:</p>
<blockquote>
<p>Are there plugins or tools for using MyST to author blog posts?</p>
</blockquote>
<p>My answer:</p>
<blockquote>
<p>Why yes there are! A quick search found these, and there are doubtless
other resources.</p>
<ul>
<li><a href="https://github.com/executablebooks/markdown-it-myst">markdown-it-myst</a> for the <code>.js</code> blogs</li>
<li>A <a href="https://plugins.getnikola.com/v8/myst/">myst Nikola plugin</a> for the <code>.py</code> blogs</li>
</ul>
</blockquote>
<p>Could probably even use it in <a href="/card/hugo/">card/Hugo</a> if I make another <a href="/post/2021/08/trying-a-thing-with-neovim/">neovim plugin</a> for <code>.md.txt</code> files.</p>
<p>Anyways, time to refill the coffee and — flips past the Distraction Cards — work! Oh jeez yeah work.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: oh no i added a javascript search thing</title>
  <link>https://randomgeekery.org/post/2021/05/oh-no-i-added-a-javascript-search-thing/</link>
  <pubDate>Fri, 14 May 2021 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2021/05/oh-no-i-added-a-javascript-search-thing/</guid>
  <description>And a touch of _hyperscript. Started from this post and leaned on the _hyperscript to tie some bits together.
&lt;button _=&#34;on click get value of #searchQuery call executeSearch(it, false)&#34;&gt;Search&lt;/button&gt; And yeah I’m back on card/Hugo. Spent so much time in the last couple weeks touching up the static repo and ignoring the card/Statamic live site. Decided not to fight it. Anyways, now that I started clearly the logical next step will be card/Gatsby.</description>
   <category>post</category> 
   <category>note</category> 
   <category>site</category>  <category>javascript</category>  <category>hyperscript</category> 
  <content:encoded><![CDATA[<p>And a touch of <a href="https://hyperscript.org/">_hyperscript</a>.
Started from <a href="https://makewithhugo.com/add-search-to-a-hugo-site/">this post</a> and leaned on the _hyperscript to tie some bits together.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-html" data-lang="html"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">button</span> <span class="na">_</span><span class="o">=</span><span class="s">&#34;on click
</span></span></span><span class="line"><span class="cl"><span class="s">           get value of #searchQuery
</span></span></span><span class="line"><span class="cl"><span class="s">           call executeSearch(it, false)&#34;</span><span class="p">&gt;</span>Search<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span></span></span></code></pre>
</figure><p>And yeah I&rsquo;m back on <a href="/card/hugo/">card/Hugo</a>. Spent so much time in the last couple weeks touching up the static repo and ignoring the <a href="/card/statamic/">card/Statamic</a> live site. Decided not to fight it. Anyways, now that I started clearly the logical next step will be <a href="/card/gatsby/">card/Gatsby</a>. For flexible values of &ldquo;logical.&rdquo;</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Go back to bed</title>
  <link>https://randomgeekery.org/post/2020/01/go-back-to-bed/</link>
  <pubDate>Thu, 16 Jan 2020 06:35:47 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/01/go-back-to-bed/</guid>
  <description>
Woke up with the terrible idea of rewriting WebMake as a card/Gatsby plugin but:
I don’t even know who would know what I’m talking about I don’t know how to do that I’m just not sure how well this plan was thought through. </description>
   <category>post</category> 
   <category>note</category> 
   <category>site</category>  <category>perl</category>  <category>javascript</category>  <category>good-idea</category>  <category>bad-idea</category> 
  <content:encoded><![CDATA[<p><img src="/post/2020/01/../../../attachments/img/2020/cover-2020-01-16.png" alt="attachments/img/2020/cover-2020-01-16.png"/></p>
<p>Woke up with the terrible idea of rewriting <a href="http://webmake.taint.org/">WebMake</a> as a <a href="/card/gatsby/">card/Gatsby</a> plugin but:</p>
<ul>
<li>I don’t even know who would know what I’m talking about</li>
<li>I don’t know how to do that</li>
<li><a href="https://youtu.be/93B072j-E3I">I’m just not sure how well this plan was thought through</a>.</li>
</ul>
]]></content:encoded>
</item>
<item>
  <title>Post: Proudly doing it wrong</title>
  <link>https://randomgeekery.org/post/2019/08/proudly-doing-it-wrong/</link>
  <pubDate>Sun, 11 Aug 2019 20:04:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/08/proudly-doing-it-wrong/</guid>
  <description>Yeah that’s Visual Studio Code. I’m trying new things.
write a site weight script that prints a report to the console make the script write the report to a file, and include the file in now. Now site building looks like: build the site weigh the site build the site and include the new report upload! (today) make the script write the info as JSON instead throw in some vue.</description>
   <category>post</category> 
   <category>note</category> 
   <category>screenshot</category>  <category>javascript</category>  <category>no-i-know</category>  <category>i-ll-fix-it</category> 
  <content:encoded><![CDATA[<p><img src="/post/2019/08/../../../attachments/img/2019/cover-2019-08-11.png" alt="attachments/img/2019/cover-2019-08-11.png"/>
Yeah that&rsquo;s Visual Studio Code. I&rsquo;m trying new things.</p>
<ol>
<li>write a <a href="/post/2019/06/weighing-files-with-python/">site weight</a> script that prints a report to the console</li>
<li>make the script write the report to a file, and include the file in <a href="/now/">now</a>. Now site building looks like:
<ol>
<li>build the site</li>
<li>weigh the site</li>
<li>build the site and include the new report</li>
<li>upload!</li>
</ol>
</li>
<li>(today) make the script write the info as JSON instead</li>
<li>throw in some <a href="https://vuejs.org/">vue.js</a> to fetch the JSON and reproduce the original report format almost exactly.</li>
<li>profit?</li>
</ol>
<p>But hey at least I don&rsquo;t need to rebuild the site after weighing it. And when free time next allows I&rsquo;ll learn a little more Vue.js and make the report prettier.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: EmberScript</title>
  <link>https://randomgeekery.org/post/2014/03/emberscript/</link>
  <pubDate>Wed, 26 Mar 2014 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2014/03/emberscript/</guid>
  <description>&lt;p&gt;&lt;a href=&#34;http://emberjs.com/&#34;&gt;Ember.js&lt;/a&gt; is an impressive piece of work. It can also be painfully  verbose. A little syntactic sugar would make that go down easier. &lt;a href=&#34;http://emberscript.com/&#34;&gt;EmberScript&lt;/a&gt; is &lt;a href=&#34;http://coffeescript.org/&#34;&gt;CoffeeScript&lt;/a&gt; with fine-tuning specifically for Ember.js. Fine-tuning includes bits like replacing &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt; with &lt;code&gt;Ember.class&lt;/code&gt; and &lt;code&gt;Ember.extends&lt;/code&gt;.&lt;/p&gt;</description>
   <category>post</category> 
   <category>post</category> 
   <category>javascript</category>  <category>tools</category> 
  <content:encoded><![CDATA[<p><a href="http://emberjs.com/">Ember.js</a> is an impressive piece of work. It can also be painfully  verbose. A little syntactic sugar would make that go down easier. <a href="http://emberscript.com/">EmberScript</a> is <a href="http://coffeescript.org/">CoffeeScript</a> with fine-tuning specifically for Ember.js. Fine-tuning includes bits like replacing <code>class</code> and <code>extends</code> with <code>Ember.class</code> and <code>Ember.extends</code>.</p>
<p>The simple example from the documentation:</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-coffeescript" data-lang="coffeescript"><span class="line"><span class="cl"><span class="k">class</span> <span class="nx">PostsController</span> <span class="k">extends</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayController</span>
</span></span><span class="line"><span class="cl">  <span class="nv">trimmedPosts: </span><span class="o">~&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">@content</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span></span></span></code></pre>
</figure><p>would expand out to</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">PostsController</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">get$</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">get</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="nx">PostsController</span> <span class="o">=</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayController</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">  <span class="nx">trimmedPosts</span><span class="o">:</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">computed</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">get$</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s1">&#39;content&#39;</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">  <span class="p">}).</span><span class="nx">property</span><span class="p">(</span><span class="s1">&#39;content.@each&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">});</span></span></span></code></pre>
</figure><p>Even if your team is using <a href="http://requirejs.org/">RequireJS</a>, it should look better than the vanilla JavaScript.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-coffeescript" data-lang="coffeescript"><span class="line"><span class="cl"><span class="nx">require</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">  <span class="s">&#34;lodash&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="s">&#34;cs!models/PostModel&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">],</span> <span class="nf">(_, PostModel) -&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="k">class</span> <span class="nx">PostsController</span> <span class="k">extends</span> <span class="nx">Ember</span><span class="p">.</span><span class="nx">ArrayController</span>
</span></span><span class="line"><span class="cl">    <span class="nv">trimmedPosts: </span><span class="o">~&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="c1"># ...
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nx">@content</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nx">PostsController</span></span></span></code></pre>
</figure><p>The challenge is that in order to simplify the code we write, we&rsquo;ve added layers between us and the code that the browser actually sees. CoffeeScript could interact weirdly with our dependencies, and EmberScript will undoubtedly have its own issues. Automated tests become even more important.</p>
<p>I need to think on this some more.</p>]]></content:encoded>
</item>
<item>
  <title>Post: The Spreadsheet Story 1</title>
  <link>https://randomgeekery.org/post/2011/04/the-spreadsheet-story-1/</link>
  <pubDate>Tue, 19 Apr 2011 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2011/04/the-spreadsheet-story-1/</guid>
  <description>NOTE
We never used the Google Spreadsheet idea, but working on it helped flesh out the thoughts that went into the Web-based marysplace-rails project.
There is this spreadsheet project I have been working on. My wife works at a day shelter for homeless and formerly homeless women, as well as their children. At this shelter, they make use of an incentive point system. The ladies do some chore or favor, and they get points.</description>
   <category>post</category> 
   <category>post</category> 
   <category>google-apps-script</category>  <category>javascript</category>  <category>blogspot</category> 
  <content:encoded><![CDATA[<h2>A design experiment figuring out what a local homeless shelter needs to track chores.</h2><blockquote>
<p><strong>NOTE</strong></p>
<p>We never used the Google Spreadsheet idea, but working on it helped flesh out the thoughts that went into the Web-based <a href="https://github.com/brianwisti/marysplace-rails">marysplace-rails</a> project.</p>
</blockquote>
<p>There is this spreadsheet project I have been working on. My wife works
at a day shelter for homeless and formerly homeless women, as well as
their children. At this shelter, they make use of an incentive point
system. The ladies do some chore or favor, and they get points. There
are preset ways to get points, with default values. Helping with the
recycling gets this number of points, while putting chairs up gets that
number of points. The points are just defaults, though. A client can get
more or fewer than the default points depending on the situation. The
staff can also create new chores or reasons for awarding points pretty
much at their whim. A couple of times a week clients get the opportunity
to spend those points in exchange for items.</p>
<p>It’s a very popular program. Clients are constantly looking for ways to
get more points, and asking what their point total is. Over the years,
some clients have accumulated tens of thousands of points.</p>
<p>Tracking incentive points was a very tedious process involving punch
cards, calculators, and the occasional mild profanity. I volunteered my
geekiness to help come up with a better tracking system. I am mostly a
Web programmer, so naturally my first impulse was a full-scale
<a href="http://rubyonrails.org">Rails</a>, <a href="http://www.djangoproject.com">Django</a>,
or maybe even <a href="http://www.catalystframework.org">Catalyst</a> Web
application. Why not, right? It does sound like the perfect job for a
<a href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a>
framework:</p>
<ul>
<li>Add and edit clients</li>
<li>Add and edit ways to get points</li>
<li>Log point changes for clients</li>
<li>Get the point total for any given client</li>
</ul>
<p>There was just one tiny flaw in my proposal, which my wife was kind
enough to point out: nobody would use it. The staff would prefer to keep
things in a familiar framework, such as a spreadsheet. Spreadsheets are
nice. They may not be the perfect choice for a database, but they do
have a lot of built-in functionality that would take me forever to
implement on my own.</p>
<p>Okay, I’m flexible. I made an
<a href="http://office.microsoft.com/en-us/excel/">Excel</a> spreadsheet. I learned
enough Excel to add some formulas and data validation rules. I even
learned enough
<a href="http://en.wikipedia.org/wiki/Visual_Basic_for_Applications">VBA</a> to add
some interactivity, reducing the tediousness a bit more. Well - reducing
the tediousness for them. Not so much for me. Visual Basic is an
interesting language, but I don’t care for it.</p>
<p>What if I could use JavaScript? <a href="http://code.google.com/googleapps/appsscript/">Google Apps
Script</a> uses JavaScript
to add programming logic to spreadsheets and other documents. I don’t
know if it would be any easier than using VBA in Excel, but I know it
would be more pleasant for me personally.</p>
<p>I have decided to go ahead and try it, now that the dust has settled on
the Excel version. Hey — if it works well enough, they might actually
use it. Regardless of whether it actually gets used, it’ll provide a
reasonable example of adding niftiness to a Google Spreadsheet.
Somebody’s bound to find that useful. Right?</p>
<p>The important thing is that I’ll have some fun.</p>
<h2 id="the-spreadsheet-itself">The Spreadsheet Itself</h2>
<p>I can almost pretend this is an
<a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">MVC</a>
application. The spreadsheet itself is the model layer, with each sheet
representing a specific model. My knowledge of spreadsheets is
incomplete at best, but the available formulas don’t seem to provide the
validation constraints that I’m looking for. It looks this will be what
those in the know call a &ldquo;fat controller&rdquo; approach, with a
disproportionate amount of the logic going into the scripting layer.
That scripting layer, driven by Google Apps Script, will handle lookup
and validation details. At least, it will until I figure out more about
how Google Spreadsheets works. The scripting layer will also provide a
view, insulating users from the worksheets by presenting dialogs for the
most common tasks.</p>
<p>Yeah, I know. It’s not really MVC. I have made a terrible analogy. But
at least my terrible analogy has helped me divide the thing into logical
components, rather than just looking at it as a spreadsheet with some
scripts.</p>
<p>So. Let’s look at the worksheets. I also made mock ups of the common
task views, just for the fun of it.</p>
<h3 id="people">People</h3>
<p>Presents information about the clients that take part in the incentive
program.</p>
<dl>
<dt>Name Used</dt>
<dd>The most common name used by this person. Must be unique. That’s
generally handled by including the initial of the last name or a
nickname.</dd>
<dt>Full Name</dt>
<dd>The full name of the client, if available.</dd>
<dt>Other Names</dt>
<dd>Nicknames and aliases are common. Use this field to list any other
known names for the client.</dd>
<dt>Starting Points</dt>
<dd>How many points the client had when the spreadsheet started being
used. Nobody wants to lose their accumulated points, and this
provides one way to differentiate it from points gained after. Could
also be handy for importing, such as setting up different workbooks
for different time periods.</dd>
<dt>Total Points</dt>
<dd>How many points this person has, after gaining and spending is taken
into account.</dd>
</dl>
<p><img src="/post/2011/04/attachments/img/2011/NewPersonDialog.png" alt="Add Person Dialog"/></p>
<h3 id="categories">Categories</h3>
<p>The different ways to gain and lose points. Pretty much a list of
predefined chores and a couple of catchall buckets.</p>
<dl>
<dt>Name</dt>
<dd>A unique name for this point category, like &ldquo;Wash breakfast dishes&rdquo;.</dd>
<dt>Default Points</dt>
<dd>Unless the user specifies otherwise, this represents the gain or
loss in points for the client.</dd>
</dl>
<p><img src="/post/2011/04/attachments/img/2011/NewCategoryDialog.png" alt="Add Category Dialog"/></p>
<h3 id="points-log">Points Log</h3>
<p>This sheet contains records of the actual transactions which affect a
client’s point total. It depends on the other worksheets for some of its
information.</p>
<dl>
<dt>Person</dt>
<dd>Who gets the points? <em>&lsquo;People&rsquo;!&lsquo;Name Used&rsquo;</em></dd>
<dt>Points Category</dt>
<dd>What are they getting the points for? <em>&lsquo;Categories&rsquo;:&lsquo;Name&rsquo;</em></dd>
<dt>Points</dt>
<dd>How many points are they getting? Based on <em>&lsquo;Categories&rsquo;:&lsquo;Default
Points&rsquo;</em></dd>
<dt>Date</dt>
<dd>When did they do whatever it was that got (or cost) them points?</dd>
</dl>
<p><img src="/post/2011/04/attachments/img/2011/PointsLoggerDialog.png" alt="Points Logger Dialog"/></p>
<h3 id="whats-missing">What’s Missing</h3>
<p>There is no sheet to track inventory for items available in the
incentive store. The items and their value vary too much for this to be
a practical feature right now.</p>
<h3 id="what-do-i-have-now">What Do I Have Now?</h3>
<p>I have an incredibly dull spreadsheet.</p>
<p><img src="/post/2011/04/attachments/img/2011/spreadsheet-01.png" alt="spreadsheet"/></p>
<h2 id="whats-next">What’s Next?</h2>
<p>I plan to spend the next few days — or weeks, depending on how much
bloggy spreadsheet time I have — exploring Google Apps Script,
particularly the
<a href="http://code.google.com/googleapps/appsscript/service_spreadsheet.html">Spreadsheet</a>
and <a href="http://code.google.com/googleapps/appsscript/service_ui.html">UI</a>
Services, in order to implement the dialog boxes I have so lovingly
created mockups of. I will be taking it in small steps, depending on
what I can manage in my copious free time. My next post will cover the
simplest dialog: creating new Categories.</p>
<aside class="admonition note">
<p class="admonition-title">Note</p>
<p>I did spent a few days exploring Google Apps Script, but decided that
the Excel spreadsheet was working well enough that I should focus my
effort on the
<a href="https://github.com/brianwisti/marysplace-rails">marysplace-rails</a>
project.</p>
</aside>]]></content:encoded>
</item>
<item>
  <title>Post: A Glance at Client-Side Frameworks</title>
  <link>https://randomgeekery.org/post/2011/03/a-glance-at-client-side-frameworks/</link>
  <pubDate>Wed, 16 Mar 2011 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2011/03/a-glance-at-client-side-frameworks/</guid>
  <description>&lt;p&gt;I was one of those lucky suckers who got a &lt;a href=&#34;http://www.google.com/chromeos/pilot-program-cr48.html&#34;&gt;Google CR-48 netbook&lt;/a&gt; a few months back.
Although I’ve failed miserably in making it my primary machine, it has gotten me thinking a lot more about browser applications and JavaScript frameworks.
That’s good.
It got me out of my twelve year server-side rut.&lt;/p&gt;</description>
   <category>post</category> 
   <category>post</category> 
   <category>javascript</category>  <category>blogspot</category> 
  <content:encoded><![CDATA[<p>I was one of those lucky suckers who got a <a href="http://www.google.com/chromeos/pilot-program-cr48.html">Google CR-48 netbook</a> a few months back.
Although I&rsquo;ve failed miserably in making it my primary machine, it has gotten me thinking a lot more about browser applications and JavaScript frameworks.
That&rsquo;s good.
It got me out of my twelve year server-side rut.</p>
<p>A lot has happened to JavaScript since I started hating it in 1998.
It&rsquo;s a real programming language, with multiple solid implementations.
Smart people have been making it work from the command line, while other smart people have been establishing a solid base to build browser applications on.
I&rsquo;ve been looking at a few different frameworks, thinking that I&rsquo;ll find the One True Framework.
No such luck.
There are three biggies that I&rsquo;m going to end up bouncing back and forth between.</p>
<h2 id="jquery">jQuery</h2>
<p><a href="https://jquery.com">jQuery</a> gives me what I need to add awesome interactive features to a site <em>right now</em>.
I would like to compare its virtue of immediate gratification to that of PHP.
There&rsquo;s a lot of hate out there for PHP, so I won&rsquo;t.
Except I just did.
Oh, the inconsistency.</p>
<h2 id="google-closure">Google Closure</h2>
<p><a href="https://code.google.com/closure">Google Closure</a> is this massive collection that seemingly provides everything that core JavaScript is missing:
type annotations, templating, compilation, and probably a lot of other stuff.
Oh, and the basic framework stuff you get in toolkits like jQuery.
It could be amazing.
It could be terrible.
It will take me a while to find out.
One thing&rsquo;s for sure.
Closure rewards the patient more than those of us who like instant gratification.</p>
<h2 id="sproutcore">Sproutcore</h2>
<p><a href="https://www.sproutcore.com">SproutCore</a> is somewhere in between the two.
There&rsquo;s some instant gratification, assuming you&rsquo;re already familiar with basic MVC as seen on the Web.
It&rsquo;s designed for building full-scale client applications, though.
Stuff like the <a href="https://www.npr.org/webapp">NPR webapp</a>.
Closure is as well, but it&rsquo;s not as locked into the single point of entry that SproutCore seems to be.
It could be.
I don&rsquo;t know.
I&rsquo;m still learning about <a href="http://code.google.com/p/jsdoc-toolkit/">JSDoc</a> tags.</p>
<p>SproutCore is the most interesting to me right now, probably because it&rsquo;s the newest.
Its main disadvantage to me is that it targets HTML 5.
My job forces me to maintain compatibility with Internet Explorer 6, which is most definitely <em>not</em> compatible with HTML 5 features.
So I can learn SproutCore, but should not expect to use it on the clock.</p>
<h1 id="conclusion">Conclusion</h1>
<p>There you have it.
Three frameworks that charm me in different ways.
I plan to more or less learn each of them.
All because Google sent me a netbook.</p>]]></content:encoded>
</item>
<item>
  <title>Post: JQuery UI&#39;s getting fancy</title>
  <link>https://randomgeekery.org/post/2008/05/jquery-uis-getting-fancy/</link>
  <pubDate>Wed, 28 May 2008 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2008/05/jquery-uis-getting-fancy/</guid>
  <description>&lt;p&gt;&lt;a href=&#34;http://jquery.com/&#34;&gt;JQuery&lt;/a&gt;’s my favorite &lt;a href=&#34;https://randomgeekery.org/card/javascript/&#34;&gt;JavaScript&lt;/a&gt; library by a long shot (very straightforward approach to manipulating page elements), and the &lt;a href=&#34;http://ui.jquery.com/&#34;&gt;JQuery UI&lt;/a&gt; makes it even better (so much shiny). I’m looking forward to using it in future projects.&lt;/p&gt;
&lt;p&gt;Sadly, I need to hunker down at work and get back to my &lt;a href=&#34;http://developer.yahoo.com/yui/&#34;&gt;YUI&lt;/a&gt; stuff. YUI’s nice, but it is a lot more complex than JQuery. I’m still trying to figure out if it’s worth the extra overhead, or if I’m missing some way to make things easier.&lt;/p&gt;</description>
   <category>post</category> 
   <category>post</category> 
   <category>javascript</category>  <category>blogspot</category> 
  <content:encoded><![CDATA[<p><a href="http://jquery.com/">JQuery</a>&rsquo;s my favorite <a href="/card/javascript/">JavaScript</a> library by a long shot (very straightforward approach to manipulating page elements), and the <a href="http://ui.jquery.com/">JQuery UI</a> makes it even better (so much shiny). I&rsquo;m looking forward to using it in future projects.</p>
<p>Sadly, I need to hunker down at work and get back to my <a href="http://developer.yahoo.com/yui/">YUI</a> stuff. YUI&rsquo;s nice, but it is a lot more complex than JQuery. I&rsquo;m still trying to figure out if it&rsquo;s worth the extra overhead, or if I&rsquo;m missing some way to make things easier.</p>]]></content:encoded>
</item>
</channel>
</rss>
