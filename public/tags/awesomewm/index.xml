<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>awesomewmonRandom Geekery</title>
    <link>https://randomgeekery.org/tags/awesomewm/</link>
    <description>
      Recent contentinawesomewm on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Tue, 27 Jul 2021 00:00:00 -0700</lastBuildDate><atom:link href="https://randomgeekery.org/tags/awesomewm/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: A finished Awesomewm post from someone else is better than a draft from me</title>
  <link>https://randomgeekery.org/post/2021/07/a-finished-awesomewm-post-from-someone-else-is-better-than-a-draft-from-me/</link>
  <pubDate>Tue, 27 Jul 2021 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2021/07/a-finished-awesomewm-post-from-someone-else-is-better-than-a-draft-from-me/</guid>
  <description>I’ve been revisiting my awesome config, starting by refactoring the default rc.lua. Was even thinking about making a post.
Then I remembered to look at Epsi’s blog, which I already knew to be a great resource for Awesome. And hey Modularized Awesome WM Configuration Structure is the post I want to write, except better. Plenty of other great posts there too.</description>
   <category>post</category> 
   <category>note</category> 
   <category>awesomewm</category>  <category>linux</category>  <category>links</category> 
  <content:encoded><![CDATA[<p>I&rsquo;ve been revisiting my <a href="https://awesomewm.org">awesome</a> config, starting by refactoring the default <code>rc.lua</code>.  Was even thinking about making a post.</p>
<p>Then I remembered to look at <a href="http://epsi-rns.github.io">Epsi</a>&rsquo;s blog, which I already knew to be a great resource for Awesome.  And hey <a href="http://epsi-rns.github.io/desktop/2016/07/06/modularized-awesome-structure.html">Modularized Awesome WM Configuration Structure</a> is the post I want to write, except better. Plenty of other great posts there too.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Not saying this is a good idea</title>
  <link>https://randomgeekery.org/post/2020/06/not-saying-this-is-a-good-idea/</link>
  <pubDate>Tue, 02 Jun 2020 14:45:01 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/06/not-saying-this-is-a-good-idea/</guid>
  <description>One big window for VcXsrv. awesomewm for a window manager. Mainly to manage maximized Emacs. There are easier ways to edit files in Windows and inbox/WSL. But it renders prettier fonts than VcXsrv with floating windows, so I think I’ll keep it. After I fix all the hotkeys, of course.
I used this post from Paul Silisteanu as a general guide, except apt install awesome awesome-extra for the awesomewm stuff.</description>
   <category>post</category> 
   <category>note</category> 
   <category>screenshot</category>  <category>awesomewm</category>  <category>wsl</category>  <category>emacs</category> 
  <content:encoded><![CDATA[<p><figure>
    <img src="/../../../attachments/img/2020/cover-2020-06-02.png" alt="attachments/img/2020/cover-2020-06-02.png"/></figure></p>
<p>One big window for <a href="https://sourceforge.net/projects/vcxsrv/">VcXsrv</a>. <a href="https://awesomewm.org/">awesomewm</a> for a window manager. Mainly to manage maximized <a href="/card/emacs/">Emacs</a>. There are easier ways to edit files in Windows and <em>inbox/WSL</em>. But it renders prettier fonts than VcXsrv with floating windows, so I think I&rsquo;ll keep it. After I fix all the hotkeys, of course.</p>
<p>I used <a href="https://solarianprogrammer.com/2017/04/16/windows-susbsystem-for-linux-xfce-4/">this post</a> from <a href="https://solarianprogrammer.com/">Paul Silisteanu</a> as a general guide, except <code>apt install awesome awesome-extra</code> for the awesomewm  stuff.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Autorun Keyboard Settings for Awesomewm</title>
  <link>https://randomgeekery.org/post/2020/04/autorun-keyboard-settings-for-awesomewm/</link>
  <pubDate>Sun, 12 Apr 2020 13:40:03 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/04/autorun-keyboard-settings-for-awesomewm/</guid>
  <description>I like my Caps Lock key to not be a Caps Lock key. Act as Escape when I tap on it. Act as Control when I press it with another key. And never ever enable SHOUT MODE.
This is the third time I’ve done this. This is also the third time I had to look up how to do this. Better save it on the site.
setxcbmap takes care of adding Control functionality and removing Caps Lock behavior.</description>
   <category>post</category> 
   <category>post</category> 
   <category>linux</category>  <category>settings</category>  <category>awesomewm</category>  <category>tools</category> 
  <content:encoded><![CDATA[<h2>Getting Control and Escape keys where I want them</h2><p>I like my Caps Lock key to not be a Caps Lock key. Act as Escape when I tap on it. Act as Control when I press it with another key. And never ever enable SHOUT MODE.</p>
<p>This is the third time I’ve done this. This is also the third time I had to look up how to do this. Better save it on the site.</p>
<p><a href="https://linux.die.net/man/1/setxkbmap">setxcbmap</a> takes care of adding Control functionality and removing Caps Lock behavior. I need <a href="https://github.com/alols/xcape">xcape</a> for Escape key behavior. Since I’m running <a href="https://manjaro.org/">Manjaro</a> on my Linux partition this week, I’ll use <a href="https://wiki.manjaro.org/index.php?title=Pamac">pamac</a> to install.</p>
<figure class="highlight">
  <pre tabindex="0"
    ><code class="language-" data-lang=""
      >$ pamac install xcape</code></pre>
</figure><p>I set up an <a href="https://wiki.archlinux.org/index.php/Awesome#Autostart">autostart</a> script to get this in every Awesomewm session.</p>
<p><strong><code>~/.config/awesome/autorun.sh</code></strong></p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">function</span> run <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> ! pgrep -f <span class="nv">$1</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$@</span><span class="p">&amp;</span>
</span></span><span class="line"><span class="cl">  <span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">run setxkbmap -option ctrl:nocaps
</span></span><span class="line"><span class="cl">run xcape -e <span class="s1">&#39;Control_L=Escape&#39;</span></span></span></code></pre>
</figure><p>It’s a script, so make sure it’s executable.</p>
<figure class="highlight">
  <pre tabindex="0"
    ><code class="language-" data-lang=""
      >$ chmod 755 ~/.config/awesome/autorun.sh</code></pre>
</figure><p>Add one line of code to my <code>rc.lua</code> to make sure <code>autorun.sh</code> gets spawned on startup.</p>
<p><strong><code>~/.config/awesome/rc.lua</code></strong></p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- {{{ Autorun</span>
</span></span><span class="line"><span class="cl"><span class="n">awful.spawn</span><span class="p">.</span><span class="n">with_shell</span><span class="p">(</span><span class="s2">&#34;~/.config/awesome/autorun.sh&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">-- }}}</span></span></span></code></pre>
</figure><p>And that’s it!</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Awesome(wm)</title>
  <link>https://randomgeekery.org/post/2019/08/awesome-wm/</link>
  <pubDate>Sat, 17 Aug 2019 16:29:10 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/08/awesome-wm/</guid>
  <description>full screenshots are a bit unwieldy with dual monitors.
There’s been way too much “it just works (more or less)” in my desktop life lately, so I started using the awesomewm tiling window manager.
Disappointingly, it works just fine.
Still, good chance to learn enough inbox/Lua to customize my setup. Looks like I’ll be revisiting Kitty terminal and a few other tools that have been on the task list for a while.</description>
   <category>post</category> 
   <category>note</category> 
   <category>linux</category>  <category>awesomewm</category>  <category>screenshot</category>  <category>fiddly-configurations-are-fun</category> 
  <content:encoded><![CDATA[<p><figure>
    <img src="/../../../attachments/img/2019/cover-2019-08-17.jpg" alt="attachments/img/2019/cover-2019-08-17.jpg"/></figure>
full screenshots are a bit unwieldy with dual monitors.</p>
<p>There&rsquo;s been way too much &ldquo;it just works (more or less)&rdquo; in my desktop life lately, so I started using the <a href="https://awesomewm.org">awesomewm</a> tiling window manager.</p>
<p>Disappointingly, it works just fine.</p>
<p>Still, good chance to learn enough <em>inbox/Lua</em> to customize my setup. Looks like I&rsquo;ll be revisiting <a href="/post/2019/05/kitty-terminal/">Kitty terminal</a> and a few other tools that have been on the task list for a while.</p>
]]></content:encoded>
</item>
</channel>
</rss>
