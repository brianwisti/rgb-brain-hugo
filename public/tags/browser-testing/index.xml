<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>browser-testingonRandom Geekery</title>
    <link>https://randomgeekery.org/tags/browser-testing/</link>
    <description>
      Recent contentinbrowser-testing on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Sun, 28 Feb 2021 00:00:00 -0800</lastBuildDate><atom:link href="https://randomgeekery.org/tags/browser-testing/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: Playwright for Python</title>
  <link>https://randomgeekery.org/post/2021/02/playwright-dev/</link>
  <pubDate>Sun, 28 Feb 2021 00:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2021/02/playwright-dev/</guid>
  <description>There’s a card/Python interface to the very handy Playwright browser automation library. The 1.9.x releases feel more Pythonic. Naming conventions, stuff like that. Feels much less like just a wrapper.
Don’t forget to install browser drivers whenever you install or upgrade Playwright!
$ python -m playwright install With pytest The pytest-playwright plugin provides fixtures, marks, and extra pytest args for browser testing. So far the only fixture I’ve used is page, the stand-in for a default browser session.</description>
   <category>post</category> 
   <category>bookmark</category> 
   <category>python</category>  <category>testing</category>  <category>browser-testing</category> 
  <content:encoded><![CDATA[<h2>Cross-browser end-to-end testing for modern web apps</h2><p>There&rsquo;s a <a href="/card/python/">card/Python</a> interface to the very handy <a href="https://playwright.dev">Playwright</a> browser automation library. The 1.9.x releases feel more Pythonic. Naming conventions, stuff like that. Feels much less like just a wrapper.</p>
<p>Don&rsquo;t forget to install browser drivers whenever you install or upgrade Playwright!</p>
<pre tabindex="0"><code>$ python -m playwright install
</code></pre><h2 id="with-pytest">With pytest</h2>
<p>The <a href="https://github.com/microsoft/playwright-pytest">pytest-playwright</a> plugin provides fixtures, marks, and extra <code>pytest</code> args for browser testing. So far the only fixture I&rsquo;ve used is <code>page</code>, the stand-in for a default browser session. Pairs nicely with <a href="https://pytest-django.readthedocs.io/">pytest-django</a>&rsquo;s <code>live_server</code> fixture.</p>
<p>Headless by default, but use <code>pytest --headful</code> if you want to watch the browser do its thing.</p>
<blockquote>
<p>[!WARNING]
Since pytest-playwright is still in <em>early</em> days — 0.0.12 as of this bookmark date — dependency managers might not acknowledge new releases. Watch the repo and manually update your dependencies when you see a new release.</p>
</blockquote>
]]></content:encoded>
</item>
<item>
  <title>Post: Checking out Playwright for Python</title>
  <link>https://randomgeekery.org/post/2020/10/checking-out-playwright-for-python/</link>
  <pubDate>Tue, 13 Oct 2020 00:24:11 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/10/checking-out-playwright-for-python/</guid>
  <description>From Announcing Playwright for Python: Reliable end-to-end testing for the web:
While automation is important, end-to-end tests are prone to being slow and flaky. To fix this, we released Playwright in JavaScript earlier this year and have enabled thousands of developers and testers to be successful at end-to-end testing. Today, we’re bringing the same capabilities to Python.
Almost made it to bed at a reasonable time until a random search showed me this.</description>
   <category>post</category> 
   <category>note</category> 
   <category>python</category>  <category>browser-testing</category> 
  <content:encoded><![CDATA[<p>From <a href="https://devblogs.microsoft.com/python/announcing-playwright-for-python-reliable-end-to-end-testing-for-the-web/">Announcing Playwright for Python: Reliable end-to-end testing for the web</a>:</p>
<blockquote>
<p>While automation is important, end-to-end tests are prone to being slow and flaky. To fix this, we released Playwright in JavaScript earlier this year and have enabled thousands of developers and testers to be successful at end-to-end testing. Today, we’re bringing the same capabilities to Python.</p>
</blockquote>
<p><em>Almost</em> made it to bed at a reasonable time until a random search showed me this. I&rsquo;d been glancing enviously at <a href="https://playwright.dev">Playwright</a> earlier this year. Configurable, cross-browser testing from <a href="/card/python/">card/Python</a>? Nice. Nicer than Selenium, anyways.</p>
<p>BRB rewriting all my browser tests.</p>
]]></content:encoded>
</item>
</channel>
</rss>
