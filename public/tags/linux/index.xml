<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>linuxonRandom Geekery</title>
    <link>https://randomgeekery.org/tags/linux/</link>
    <description>
      Recent contentinlinux on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Fri, 15 Jul 2022 15:15:45 -0700</lastBuildDate><atom:link href="https://randomgeekery.org/tags/linux/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: [2022-07-15 Fri 15:15]</title>
  <link>https://randomgeekery.org/post/2022/07/2022-07-15-fri-1515/</link>
  <pubDate>Fri, 15 Jul 2022 15:15:45 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2022/07/2022-07-15-fri-1515/</guid>
  <description>&lt;p&gt;This week the Linux partition is &lt;a href=&#34;https://endeavouros.com&#34;&gt;EndeavourOS&lt;/a&gt; — specifically
&lt;a href=&#34;https://discovery.endeavouros.com/window-tiling-managers/qtile/2022/01/&#34;&gt;Qtile Community Edition&lt;/a&gt;.&lt;/p&gt;</description>
   <category>post</category> 
   <category>note</category> 
   <category>linux</category>  <category>my-computer</category> 
  <content:encoded><![CDATA[<p>This week the Linux partition is <a href="https://endeavouros.com">EndeavourOS</a> — specifically
<a href="https://discovery.endeavouros.com/window-tiling-managers/qtile/2022/01/">Qtile Community Edition</a>.</p>
<p><img src="/post/2022/07/../../../attachments/img/2022-07-15-desktop.png" alt="attachments/img/2022-07-15-desktop.png"/>
you have to add a few things to make tiling window manager screenshots interesting</p>
<p>So far, I like it.</p>
<p>And yeah, I think I still want the tumblelog for sharing quick links and what not. I&rsquo;ll tie it in a bit more closely with the main blog, but I will let it live as its own separate site.</p>]]></content:encoded>
</item>
<item>
  <title>Post: [2022-06-18 Sat 07:37]</title>
  <link>https://randomgeekery.org/post/2022/06/2022-06-18-sat-0737/</link>
  <pubDate>Sat, 18 Jun 2022 07:37:37 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2022/06/2022-06-18-sat-0737/</guid>
  <description>Oh hey. https://regolith-linux.org redirects to https://regolith-desktop.com, and I see nothing about Regolith Desktop being in beta anymore.
Guess it’s time to update!</description>
   <category>post</category> 
   <category>note</category> 
   <category>linux</category>  <category>my-computer</category> 
  <content:encoded><![CDATA[<p>Oh hey. <a href="https://regolith-linux.org">https://regolith-linux.org</a> redirects to <a href="https://regolith-desktop.com">https://regolith-desktop.com</a>, and I see nothing about Regolith Desktop being in beta anymore.</p>
<p>Guess it&rsquo;s time to update!</p>
]]></content:encoded>
</item>
<item>
  <title>Post: [2022-05-14 Sat 14:55]</title>
  <link>https://randomgeekery.org/post/2022/05/2022-05-14-sat-1455/</link>
  <pubDate>Sat, 14 May 2022 15:02:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2022/05/2022-05-14-sat-1455/</guid>
  <description>We now return to our regularly scheduled programming. I reinstalled Regolith. Yes it’s based on Ubuntu 20.04. In my case that’s a plus, since some proprietary tools I rely on have not been updated for 22.04. I feel like I have what I need with Homebrew over Regolith.</description>
   <category>post</category> 
   <category>note</category> 
   <category>linux</category> 
  <content:encoded><![CDATA[<p>We now return to our regularly scheduled programming. I reinstalled <a href="https://regolith-linux.org/">Regolith</a>. Yes it&rsquo;s based on Ubuntu 20.04. In my case that&rsquo;s a plus, since some proprietary tools I rely on have not been updated for 22.04. I feel like I have what I need with <a href="https://brew.sh">Homebrew</a> over Regolith.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: [2022-05-12 Thu 07:39]</title>
  <link>https://randomgeekery.org/post/2022/05/2022-05-12-thu-0739/</link>
  <pubDate>Thu, 12 May 2022 07:50:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2022/05/2022-05-12-thu-0739/</guid>
  <description>Last night I ran a clean install of Pop!_OS 22.04 on the Linux partition. All seemed well, until I noticed that no Electron-based apps had titlebars. Also? Unless I’m in tiling mode, they’re all stacked in one unreachable, unresizable mass in the middle.
No screenshot, sorry. Had to get stuff done so I’m regrouping in the Windows partition. I’ll ponder what to do about it later. Might overlay the whole thing with Regolith Desktop until I get a better plan.</description>
   <category>post</category> 
   <category>note</category> 
   <category>linux</category>  <category>electron</category> 
  <content:encoded><![CDATA[<p>Last night I ran a clean install of <a href="https://pop.system76.com">Pop!_OS</a> 22.04 on the Linux partition. All seemed well, until I noticed that no Electron-based apps had titlebars. Also? Unless I&rsquo;m in tiling mode, they&rsquo;re all stacked in one unreachable, unresizable mass in the middle.</p>
<p>No screenshot, sorry. Had to get stuff done so I&rsquo;m regrouping in the Windows partition. I&rsquo;ll ponder what to do about it later. Might overlay the whole thing with <a href="http://regolith-desktop.com">Regolith Desktop</a> until I get a better plan. Regretting that I replaced a perfectly functional <a href="https://regolith-linux.org">Regolith 1.6</a> install for this.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: A finished Awesomewm post from someone else is better than a draft from me</title>
  <link>https://randomgeekery.org/post/2021/07/a-finished-awesomewm-post-from-someone-else-is-better-than-a-draft-from-me/</link>
  <pubDate>Tue, 27 Jul 2021 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2021/07/a-finished-awesomewm-post-from-someone-else-is-better-than-a-draft-from-me/</guid>
  <description>I’ve been revisiting my awesome config, starting by refactoring the default rc.lua. Was even thinking about making a post.
Then I remembered to look at Epsi’s blog, which I already knew to be a great resource for Awesome. And hey Modularized Awesome WM Configuration Structure is the post I want to write, except better. Plenty of other great posts there too.</description>
   <category>post</category> 
   <category>note</category> 
   <category>awesomewm</category>  <category>linux</category>  <category>links</category> 
  <content:encoded><![CDATA[<p>I&rsquo;ve been revisiting my <a href="https://awesomewm.org">awesome</a> config, starting by refactoring the default <code>rc.lua</code>.  Was even thinking about making a post.</p>
<p>Then I remembered to look at <a href="http://epsi-rns.github.io">Epsi</a>&rsquo;s blog, which I already knew to be a great resource for Awesome.  And hey <a href="http://epsi-rns.github.io/desktop/2016/07/06/modularized-awesome-structure.html">Modularized Awesome WM Configuration Structure</a> is the post I want to write, except better. Plenty of other great posts there too.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Autorun Keyboard Settings for Awesomewm</title>
  <link>https://randomgeekery.org/post/2020/04/autorun-keyboard-settings-for-awesomewm/</link>
  <pubDate>Sun, 12 Apr 2020 13:40:03 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/04/autorun-keyboard-settings-for-awesomewm/</guid>
  <description>I like my Caps Lock key to not be a Caps Lock key. Act as Escape when I tap on it. Act as Control when I press it with another key. And never ever enable SHOUT MODE.
This is the third time I’ve done this. This is also the third time I had to look up how to do this. Better save it on the site.
setxcbmap takes care of adding Control functionality and removing Caps Lock behavior.</description>
   <category>post</category> 
   <category>post</category> 
   <category>linux</category>  <category>settings</category>  <category>awesomewm</category>  <category>tools</category> 
  <content:encoded><![CDATA[<h2>Getting Control and Escape keys where I want them</h2><p>I like my Caps Lock key to not be a Caps Lock key. Act as Escape when I tap on it. Act as Control when I press it with another key. And never ever enable SHOUT MODE.</p>
<p>This is the third time I’ve done this. This is also the third time I had to look up how to do this. Better save it on the site.</p>
<p><a href="https://linux.die.net/man/1/setxkbmap">setxcbmap</a> takes care of adding Control functionality and removing Caps Lock behavior. I need <a href="https://github.com/alols/xcape">xcape</a> for Escape key behavior. Since I’m running <a href="https://manjaro.org/">Manjaro</a> on my Linux partition this week, I’ll use <a href="https://wiki.manjaro.org/index.php?title=Pamac">pamac</a> to install.</p>
<pre tabindex="0"><code>$ pamac install xcape
</code></pre><p>I set up an <a href="https://wiki.archlinux.org/index.php/Awesome#Autostart">autostart</a> script to get this in every Awesomewm session.</p>
<p><strong><code>~/.config/awesome/autorun.sh</code></strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="k">function</span> run <span class="o">{</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span> ! pgrep -f <span class="nv">$1</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">  <span class="k">then</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$@</span><span class="p">&amp;</span>
</span></span><span class="line"><span class="cl">  <span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">run setxkbmap -option ctrl:nocaps
</span></span><span class="line"><span class="cl">run xcape -e <span class="s1">&#39;Control_L=Escape&#39;</span>
</span></span></code></pre></div><p>It’s a script, so make sure it’s executable.</p>
<pre tabindex="0"><code>$ chmod 755 ~/.config/awesome/autorun.sh
</code></pre><p>Add one line of code to my <code>rc.lua</code> to make sure <code>autorun.sh</code> gets spawned on startup.</p>
<p><strong><code>~/.config/awesome/rc.lua</code></strong></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- {{{ Autorun</span>
</span></span><span class="line"><span class="cl"><span class="n">awful.spawn</span><span class="p">.</span><span class="n">with_shell</span><span class="p">(</span><span class="s2">&#34;~/.config/awesome/autorun.sh&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">-- }}}</span>
</span></span></code></pre></div><p>And that’s it!</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Installing Emacs Documentation on POP!_os</title>
  <link>https://randomgeekery.org/post/2019/12/installing-emacs-documentation-on-pop-os/</link>
  <pubDate>Sun, 01 Dec 2019 11:11:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/12/installing-emacs-documentation-on-pop-os/</guid>
  <description>Emacs Info (zoomed with text-scale-adjust)
On a Linux flavor like Ubuntu or Pop!_os which uses apt for package management? Trying to find the built-in Emacs documentation so you can read it without going online? Install emacs-common-non-dfsg.
$ sudo apt install emacs-common-non-dfsg It’s a license thing. The GNU Project distributes the core Emacs documentation under the GNU Free Documentation License. Debian decided years ago that the GFDL didn’t meet the Debian Free Software Guidelines.</description>
   <category>post</category> 
   <category>post</category> 
   <category>emacs</category>  <category>linux</category>  <category>info</category>  <category>tools</category> 
  <content:encoded><![CDATA[<h2>Apt spells "emacs core docs" as "emacs-common-non-dfsg".</h2><p><img src="/post/2019/12/../../../attachments/img/2019/cover-2019-12-01.png" alt="attachments/img/2019/cover-2019-12-01.png"/>
Emacs Info (zoomed with <code>text-scale-adjust</code>)</p>
<p>On a Linux flavor like <a href="https://ubuntu.com/">Ubuntu</a> or <a href="https://system76.com/pop">Pop!_os</a> which uses <a href="https://en.wikipedia.org/wiki/APT%5F%28software%29"><code>apt</code></a> for package management? Trying to find the built-in <a href="/card/emacs/">Emacs</a> documentation so you can read it without going online? Install <a href="https://packages.debian.org/jessie/emacs24-common-non-dfsg"><code>emacs-common-non-dfsg</code></a>.</p>
<pre tabindex="0"><code>$ sudo apt install emacs-common-non-dfsg
</code></pre><p>It’s a license thing. The <a href="https://www.gnu.org/">GNU Project</a> distributes the core <a href="https://www.gnu.org/software/emacs/#Manuals">Emacs</a> documentation under the <a href="https://www.gnu.org/licenses/fdl-1.3.html">GNU Free Documentation License</a>. <a href="https://www.debian.org/">Debian</a> decided <a href="https://www.debian.org/vote/2006/vote%5F001">years ago</a> that the GFDL didn’t meet the <a href="https://www.debian.org/social%5Fcontract#guidelines">Debian Free Software Guidelines</a>. It’s still available – in the non-free repo – though they gave it a name I’ll never remember unless I write it down somewhere.</p>
<p>That decision has rippled down over the years. Even though I haven’t used Debian since the early 2000’s, I needed to know it today. Okay I didn’t <em>need</em> to know it. I could have just read the <a href="https://www.gnu.org/manual/manual.html">online docs</a>.</p>
<p>I always liked the <a href="https://www.gnu.org/software/texinfo/">Info</a> reader and consider it a significant feature when going through an Emacs phase. Though yeah – it’s a bit archaic. Honestly that describes most of Emacs. When I want featureful and flashy I can use <a href="https://code.visualstudio.com/">Visual Studio Code</a> or <a href="https://atom.io/">Atom</a>.</p>
<p>Not even a two hundred word post and I managed to digress. Ah well. Some days are like that.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Building Rakudo and Moarvm on Linux</title>
  <link>https://randomgeekery.org/post/2019/11/building-rakudo-and-moarvim-on-linux/</link>
  <pubDate>Sun, 03 Nov 2019 00:00:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/11/building-rakudo-and-moarvim-on-linux/</guid>
  <description>[!NOTE] 2021-08-21 Skip all this and use Rakubrew to manage card/Raku installations.
Not instructions, but a brain dump of compiling and checking a Rakudo installation.
Windows? No problem.
&gt; choco install rakudo macOS? No problem.
$ brew install rakudo Linux?
$ brew install rakudo Well…
==&gt; Installing dependencies for rakudo: moarvm and nqp ==&gt; Installing rakudo dependency: moarvm ==&gt; Downloading https://github.com/MoarVM/MoarVM/releases/download/2019.07.1/MoarVM-2019.07.1.tar.gz Already downloaded: /home/randomgeek/.cache/Homebrew/downloads/2c331d2b583c39890ed5fd765cea551c9e171136038a6a400217c7725ae60a9d--MoarVM-2019.07.1.tar.gz ==&gt; perl Configure.pl --has-libatomic_ops --has-libffi --has-libtommath --has-libuv --optimize --prefix=/home/linuxbrew/.</description>
   <category>post</category> 
   <category>post</category> 
   <category>raku-lang</category>  <category>perl6</category>  <category>linux</category>  <category>tools</category> 
  <content:encoded><![CDATA[<h2>In which I rediscover `make && make test && make install`</h2><blockquote>
<p>[!NOTE] 2021-08-21
Skip all this and use <a href="/post/2020/05/setting-up-raku-with-rakubrew/">Rakubrew</a> to manage <a href="/card/raku/">card/Raku</a> installations.</p>
</blockquote>
<p>Not instructions, but a brain dump of compiling and checking a <a href="https://rakudo.org">Rakudo</a> installation.</p>
<p>Windows? No problem.</p>
<pre tabindex="0"><code>&gt; choco install rakudo
</code></pre><p>macOS? No problem.</p>
<pre tabindex="0"><code>$ brew install rakudo
</code></pre><p><em>Linux</em>?</p>
<pre tabindex="0"><code>$ brew install rakudo
</code></pre><p>Well…</p>
<pre tabindex="0"><code>==&gt; Installing dependencies for rakudo: moarvm and nqp
==&gt; Installing rakudo dependency: moarvm
==&gt; Downloading https://github.com/MoarVM/MoarVM/releases/download/2019.07.1/MoarVM-2019.07.1.tar.gz
Already downloaded: /home/randomgeek/.cache/Homebrew/downloads/2c331d2b583c39890ed5fd765cea551c9e171136038a6a400217c7725ae60a9d--MoarVM-2019.07.1.tar.gz
==&gt; perl Configure.pl --has-libatomic_ops --has-libffi --has-libtommath --has-libuv --optimize --prefix=/home/linuxbrew/.linuxbrew/Cellar/moarvm/2019.07.1
==&gt; make realclean
==&gt; make
Last 15 lines from /home/randomgeek/.cache/Homebrew/Logs/moarvm/03.make:
compiling src/jit/x64/emit.o
linking libmoar.so
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_exptmod_fast.o): relocation R_X86_64_32S against symbol `mp_reduce_2k&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_prime_is_prime.o): relocation R_X86_64_32 against symbol `ltm_prime_tab&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_rand.o): relocation R_X86_64_32 against `.rodata.str1.1&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_read_radix.o): relocation R_X86_64_32S against symbol `mp_s_rmap_reverse&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_s_mp_exptmod.o): relocation R_X86_64_32 against symbol `mp_reduce&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_cnt_lsb.o): relocation R_X86_64_32S against `.rodata&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_is_square.o): relocation R_X86_64_32S against `.rodata&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_kronecker.o): relocation R_X86_64_32S against `.rodata&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_prime_is_divisible.o): relocation R_X86_64_32 against symbol `ltm_prime_tab&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: /home/linuxbrew/.linuxbrew/lib/libtommath.a(bn_mp_abs.o): relocation R_X86_64_PC32 against symbol `mp_copy&#39; can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: final link failed: bad value
collect2: error: ld returned 1 exit status
</code></pre><p>Awkward.</p>
<p>I don’t want the <code>apt</code> version, because it’s from last year. Maybe I want <a href="https://github.com/tadzik/rakudobrew">rakudobrew</a>?</p>
<p>Well — maybe later. At the moment I just want to see if Rakudo builds at all.</p>
<p>Let’s break down the big shell alias from Zoffix’s <a href="https://github.com/zoffixznet/r">Instructions to build rakudo from source</a> into discrete steps.</p>
<pre tabindex="0"><code>$ git clone https://github.com/rakudo/rakudo/ ~/rakudo
$ echo &#39;export PATH=&#34;$HOME/rakudo/install/bin:$HOME/rakudo/install/share/perl6/site/bin:$PATH&#34;&#39; &gt;&gt; ~/.bashrc
$ cd ~/rakudo
$ git checkout master
$ git pull
$ git checkout $(git describe --abbrev=0 --tags)
$ perl Configure.pl --gen-moar --gen-nqp --backends=moar
$ make
</code></pre><p>And just to be on the safe side:</p>
<pre tabindex="0"><code>$ make test
Test Summary Report
-------------------
t/09-moar/Line_Break__LineBreak.t                             (Wstat: 0 Tests: 2 Failed: 0)
  TODO passed:   1
t/09-moar/General_Category__extracted-DerivedGeneralCategory.t (Wstat: 0 Tests: 1 Failed: 0)
  TODO passed:   1
Files=98, Tests=1760, 36 wallclock secs ( 0.34 usr  0.08 sys + 130.23 cusr  9.24 csys = 139.89 CPU)
Result: PASS
</code></pre><p>Great!</p>
<pre tabindex="0"><code>$ make install
$ source ~/.bashrc
</code></pre><p>Now, a little Raku one-liner test.</p>
<pre tabindex="0"><code>$ perl6 -e &#39;say &#34;Yo, World! This is $*PERL - specifically: { ($*PERL, $*VM, $*DISTRO).map({ $_.gist })}&#34;&#39;
Yo, World! This is Perl 6 - specifically: Perl 6 (6.d) moar (2019.07.1) ubuntu (19.10)
</code></pre><p>Using <code>gist</code> instead of normal stringification because I wanted all the details. You can see with <code>$*PERL</code> inside the string that <code>Str</code> is not for the gory details.</p>
<p>It’s a bit like <code>str</code> versus <code>repr</code> in the <a href="/card/python/">card/Python</a> world.</p>
<p>Anyways yay, it worked! If I ever get enough free time, I might investigate the <code>brew</code> bug. But it took me three days to finish <em>this</em> post.</p>
<p><a href="https://raku.online/">Andrew Shitov</a> already prepared for the “Perl 6” → “Raku” name transition with a shell alias:</p>
<pre tabindex="0"><code>$ alias raku=&#39;perl6&#39;
</code></pre><p>Not the worst way to keep the new name in mind.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: A Microsoft Linux Conference?</title>
  <link>https://randomgeekery.org/post/2019/09/a-microsoft-linux-conference/</link>
  <pubDate>Thu, 12 Sep 2019 14:43:18 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/09/a-microsoft-linux-conference/</guid>
  <description>From OMG! Ubuntu:
The two day event will feature presentations by the Microsoft team behind the Windows Subsystem for Linux (WSL) feature; the creators of the ‘Pengwin‘ WSL distributions; and (more pertinent to our tastes, perhaps) the Ubuntu on WSL team at Canonical.
The free-but-small WSLConf is scheduled for March of next year, so inbox/WSL 2 will probably be generally available. Much easier than staying caught up with the Fast Ring.</description>
   <category>post</category> 
   <category>note</category> 
   <category>wsl</category>  <category>microsoft</category>  <category>linux</category>  <category>wslconf</category>  <category>well-i-never</category>  <category>bound-to-happen-eventually</category> 
  <content:encoded><![CDATA[<p>From <a href="https://www.omgubuntu.co.uk/2019/09/microsoft-linux-conference-wslconf-march-2020">OMG! Ubuntu</a>:</p>
<blockquote>
<p>The two day event will feature presentations by the Microsoft team behind the Windows Subsystem for Linux (WSL) feature; the creators of the ‘Pengwin‘ WSL distributions; and (more pertinent to our tastes, perhaps) the Ubuntu on WSL team at Canonical.</p>
</blockquote>
<p>The free-but-small <a href="https://www.wslconf.dev/">WSLConf</a> is scheduled for March of next year, so <em>inbox/WSL</em> 2 will probably be generally available. Much easier than staying caught up with the Fast Ring.</p>
<p>I may have to check this out.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Awesome(wm)</title>
  <link>https://randomgeekery.org/post/2019/08/awesome-wm/</link>
  <pubDate>Sat, 17 Aug 2019 16:29:10 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/08/awesome-wm/</guid>
  <description>full screenshots are a bit unwieldy with dual monitors.
There’s been way too much “it just works (more or less)” in my desktop life lately, so I started using the awesomewm tiling window manager.
Disappointingly, it works just fine.
Still, good chance to learn enough inbox/Lua to customize my setup. Looks like I’ll be revisiting Kitty terminal and a few other tools that have been on the task list for a while.</description>
   <category>post</category> 
   <category>note</category> 
   <category>linux</category>  <category>awesomewm</category>  <category>screenshot</category>  <category>fiddly-configurations-are-fun</category> 
  <content:encoded><![CDATA[<p><img src="/post/2019/08/../../../attachments/img/2019/cover-2019-08-17.jpg" alt="attachments/img/2019/cover-2019-08-17.jpg"/>
full screenshots are a bit unwieldy with dual monitors.</p>
<p>There&rsquo;s been way too much &ldquo;it just works (more or less)&rdquo; in my desktop life lately, so I started using the <a href="https://awesomewm.org">awesomewm</a> tiling window manager.</p>
<p>Disappointingly, it works just fine.</p>
<p>Still, good chance to learn enough <em>inbox/Lua</em> to customize my setup. Looks like I&rsquo;ll be revisiting <a href="/post/2019/05/kitty-terminal/">Kitty terminal</a> and a few other tools that have been on the task list for a while.</p>
]]></content:encoded>
</item>
</channel>
</rss>
