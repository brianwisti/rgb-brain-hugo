<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>artonRandom Geekery</title>
    <link>https://randomgeekery.org/tags/art/</link>
    <description>
      Recent contentinart on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Sun, 22 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://randomgeekery.org/tags/art/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: watched Your Colors Suck (it&#39;s not your fault)</title>
  <link>https://randomgeekery.org/post/2023/10/watched-your-colors-suck-its-not-your-fault/</link>
  <pubDate>Sun, 22 Oct 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/10/watched-your-colors-suck-its-not-your-fault/</guid>
  <description>Hey do you want a 37 minute info dump about digital color? Of course you do.
Topics covered include: Quantization, color banding, dithering, value mapping, palette swapping, radiometry, photometry, how humans perceive color, colorimetry, spectral rendering, the rgb color model, deriving srgb, the hsl color model, gradient mapping, randomly generated color palettes, perceptual color spaces, the lab color model, oklab
tldw: use OKLAB not RGB or HSL. There’s even &#43;oklab()&#43; in CSS now.</description>
   <category>post</category> 
   <category>post</category> 
   <category>watch</category>  <category>css</category>  <category>art</category> 
  <content:encoded><![CDATA[<p>Hey do you want a 37 minute info dump about digital color? Of course you do.</p>
<p><img src="https://www.youtube.com/watch?v=fv-wlo8yVhk"/></p>
<blockquote>
<p>Topics covered include: Quantization, color banding, dithering, value mapping, palette swapping, radiometry, photometry, how humans perceive color, colorimetry, spectral rendering, the rgb color model, deriving srgb, the hsl color model, gradient mapping, randomly generated color palettes, perceptual color spaces, the lab color model, oklab</p>
</blockquote>
<p><a href="/card/tldw/">tldw</a>: use <a href="https://bottosson.github.io/posts/oklab/">OKLAB</a> not RGB or HSL. There’s even <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklab"><code>+oklab()+</code></a> in CSS now.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Dream Aesthetic</title>
  <link>https://randomgeekery.org/post/2023/08/dream-aesthetic/</link>
  <pubDate>Tue, 29 Aug 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/08/dream-aesthetic/</guid>
  <description>Bedtime drawing. An hour or so every night or so, for a few months. Helps me wind down from the day.
Usually that’s all it’s for, but my wife liked the finished product. So hey it’s on Design by Hümans if you need a new sweatshirt or something! I did this in Linea Sketch, which has a fixed canvas size. Better start using Procreate or Infinite Painter – and a larger canvas – just in case she wants the next one on a duvet.</description>
   <category>post</category> 
   <category>note</category> 
   <category>art</category>  <category>symmetry</category>  <category>linea-sketch</category>  <category>bedtime-drawing</category> 
  <content:encoded><![CDATA[<p><img src="/post/2023/08/../../../attachments/img/2023/cover-2023-08-29.png" alt="attachments/img/2023/cover-2023-08-29.png"/></p>
<p>Bedtime drawing. An hour or so every night or so, for a few months. Helps me wind down from the day.</p>
<p>Usually that’s all it’s for, but my wife liked the finished product. So hey it’s on <a href="https://www.designbyhumans.com/shop/pullover-hoodie/dream-aesthetic/1924278/">Design by Hümans</a> if you need a new sweatshirt or something! I did this in <a href="https://linea-app.com/">Linea Sketch</a>, which has a fixed canvas size. Better start using Procreate or Infinite Painter – and a larger canvas – just in case she wants the next one on a duvet.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: A Fun Python Turtle YouTube Playlist</title>
  <link>https://randomgeekery.org/post/2023/05/a-fun-python-turtle-youtube-playlist/</link>
  <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
  
  <guid>https://randomgeekery.org/post/2023/05/a-fun-python-turtle-youtube-playlist/</guid>
  <description>I went a bit past the videos
Got a little bored of trying to build relevant skills for my ongoing job search. Went through Coding Cassowary’s Generative Art playlist yesterday instead. Had some ideas and fiddled a bit more with those ideas today. Trees should have leaves usually, right?
I’ll share the code, but only if you promise to remember this is my brain adding unsorted thoughts to code from the aforementioned playlist.</description>
   <category>post</category> 
   <category>note</category> 
   <category>python</category>  <category>art</category> 
  <content:encoded><![CDATA[<p><img src="/post/2023/05/../../../attachments/img/2023/cover-2023-05-20.png" alt="attachments/img/2023/cover-2023-05-20.png"/>
I went a bit past the videos</p>
<p>Got a little bored of trying to build relevant skills for my ongoing job search.
Went through Coding Cassowary&rsquo;s <a href="https://www.youtube.com/playlist?list=PLBLV84VG7Md9oO4MUOhyqz7gBFOzx8XIw">Generative Art playlist</a> yesterday instead. Had some ideas and fiddled a bit more with those ideas today. Trees should have leaves usually, right?</p>
<p>I&rsquo;ll share the code, but only if you promise to remember this is my brain adding unsorted thoughts to code from the aforementioned playlist. Most of the thoughts in here are unfinished. What I <em>want</em> is for you to watch the playlist.
And have some fun drawing with <a href="/card/python/">Python</a>, using <a href="https://docs.python.org/3/library/turtle.html">Turtle</a> or some other library.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;Draw a fractal tree.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">random</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="n">Screen</span><span class="p">,</span> <span class="n">Turtle</span><span class="p">,</span> <span class="n">_Screen</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">typing</span> <span class="kn">import</span> <span class="n">Optional</span><span class="p">,</span> <span class="n">Tuple</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">RGBColor</span> <span class="o">=</span> <span class="n">Tuple</span><span class="p">[</span><span class="nb">float</span><span class="p">,</span> <span class="nb">float</span><span class="p">,</span> <span class="nb">float</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">COLOR_CANVAS_DEFAULT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mi">232</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">210</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">210</span> <span class="o">/</span> <span class="mi">255</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_PEN_DEFAULT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mi">94</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">71</span> <span class="o">/</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">69</span> <span class="o">/</span> <span class="mi">255</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_SKY_LIGHT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.53</span><span class="p">,</span> <span class="mf">0.81</span><span class="p">,</span> <span class="mf">0.92</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_SKY_DARK</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.008</span><span class="p">,</span> <span class="mf">0.043</span><span class="p">,</span> <span class="mf">0.059</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_TRUNK_BASE</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.26</span><span class="p">,</span> <span class="mf">0.16</span><span class="p">,</span> <span class="mf">0.11</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">COLOR_TRUNK_LIGHT</span><span class="p">:</span> <span class="n">RGBColor</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.96</span><span class="p">,</span> <span class="mf">0.86</span><span class="p">,</span> <span class="mf">0.81</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">set_theme</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="p">:</span> <span class="n">_Screen</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">canvas_width</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">canvas_height</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">canvas_color</span><span class="o">=</span><span class="n">COLOR_CANVAS_DEFAULT</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">pen_color</span><span class="o">=</span><span class="n">COLOR_PEN_DEFAULT</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">thickness</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">speed_value</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">tracer_value</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">hide_turtle</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Set properties for the current drawing.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">setup</span><span class="p">(</span><span class="n">canvas_width</span><span class="p">,</span> <span class="n">canvas_height</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">bgcolor</span><span class="p">(</span><span class="n">canvas_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">pen_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">width</span><span class="p">(</span><span class="n">thickness</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">speed</span><span class="p">(</span><span class="n">speed_value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">tracer</span><span class="p">(</span><span class="n">tracer_value</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">hide_turtle</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">turtle</span><span class="o">.</span><span class="n">hideturtle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">draw_leaf</span><span class="p">(</span><span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a single leaf.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">leaf_color</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">0.75</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.25</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">leaf_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">begin_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">circle</span><span class="p">(</span><span class="mf">4.0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">end_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">COLOR_TRUNK_BASE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="n">decrease</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="n">noise</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a single tree segment.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">length</span> <span class="o">&lt;=</span> <span class="mi">8</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">draw_leaf</span><span class="p">(</span><span class="n">turtle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">length_factor</span> <span class="o">=</span> <span class="n">length</span> <span class="o">/</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">    <span class="n">trunk_color</span> <span class="o">=</span> <span class="n">lighten_trunk</span><span class="p">(</span><span class="n">length_factor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">trunk_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">width</span><span class="p">(</span><span class="n">length_factor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">length</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">new_length</span> <span class="o">=</span> <span class="n">length</span> <span class="o">*</span> <span class="n">decrease</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">noise</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">new_length</span> <span class="o">*=</span> <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="mf">0.9</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">angle_l</span> <span class="o">=</span> <span class="n">angle</span> <span class="o">+</span> <span class="n">random</span><span class="o">.</span><span class="n">gauss</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">angle_r</span> <span class="o">=</span> <span class="n">angle</span> <span class="o">+</span> <span class="n">random</span><span class="o">.</span><span class="n">gauss</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="n">angle_l</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span> <span class="n">new_length</span><span class="p">,</span> <span class="n">decrease</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="n">angle_l</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="n">angle_r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span> <span class="n">new_length</span><span class="p">,</span> <span class="n">decrease</span><span class="p">,</span> <span class="n">angle</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="n">angle_r</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">backward</span><span class="p">(</span><span class="n">length</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">fit_color</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">rgb</span><span class="p">:</span> <span class="n">RGBColor</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">minimum_rgb</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">RGBColor</span><span class="p">]</span> <span class="o">=</span> <span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">maximum_rgb</span><span class="p">:</span> <span class="n">Optional</span><span class="p">[</span><span class="n">RGBColor</span><span class="p">]</span> <span class="o">=</span> <span class="kc">None</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Ensure color fits within an allowed RGB range.&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">fitted_color</span> <span class="o">=</span> <span class="n">rgb</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">minimum_rgb</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">fitted_color</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="nb">min</span><span class="p">(</span><span class="n">minimum_rgb</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">min</span><span class="p">(</span><span class="n">minimum_rgb</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">min</span><span class="p">(</span><span class="n">minimum_rgb</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">maximum_rgb</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">fitted_color</span> <span class="o">=</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="nb">max</span><span class="p">(</span><span class="n">maximum_rgb</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">max</span><span class="p">(</span><span class="n">maximum_rgb</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">            <span class="nb">max</span><span class="p">(</span><span class="n">maximum_rgb</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">fitted_color</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fitted_color</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">draw_sky</span><span class="p">(</span><span class="n">screen</span><span class="p">:</span> <span class="n">_Screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a fractured sky.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">size</span> <span class="o">=</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">    <span class="n">noise</span> <span class="o">=</span> <span class="mf">0.0</span>
</span></span><span class="line"><span class="cl">    <span class="n">x_edge</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_width</span><span class="p">()</span> <span class="o">//</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">y_edge</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_height</span><span class="p">()</span> <span class="o">//</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="n">y_edge</span><span class="p">,</span> <span class="n">y_edge</span><span class="p">,</span> <span class="n">size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="n">x_edge</span><span class="p">,</span> <span class="n">x_edge</span><span class="p">,</span> <span class="n">size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># move to the location</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">penup</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">goto</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># rotate</span>
</span></span><span class="line"><span class="cl">            <span class="n">angle</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">uniform</span><span class="p">(</span><span class="o">-</span><span class="n">noise</span><span class="p">,</span> <span class="n">noise</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">noise</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">noise_factor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="p">(</span><span class="n">y_edge</span> <span class="o">-</span> <span class="n">y</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span>
</span></span><span class="line"><span class="cl">                <span class="n">sky_color</span> <span class="o">=</span> <span class="n">darken_sky</span><span class="p">(</span><span class="n">noise_factor</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">sky_color</span> <span class="o">=</span> <span class="n">COLOR_SKY_DARK</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">pendown</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="n">COLOR_SKY_DARK</span><span class="p">,</span> <span class="n">sky_color</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">begin_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="n">angle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="c1"># draw square</span>
</span></span><span class="line"><span class="cl">            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="n">angle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">turtle</span><span class="o">.</span><span class="n">end_fill</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">noise</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">draw_tree</span><span class="p">(</span><span class="n">screen</span><span class="p">:</span> <span class="n">_Screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">:</span> <span class="n">Turtle</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw one tree.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># start at the bottom edge, off-center for visual interest</span>
</span></span><span class="line"><span class="cl">    <span class="n">y_edge</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_height</span><span class="p">()</span> <span class="o">/</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">    <span class="n">trunk_x</span> <span class="o">=</span> <span class="n">screen</span><span class="o">.</span><span class="n">window_width</span><span class="p">()</span> <span class="o">/</span> <span class="mi">4</span> <span class="o">*</span> <span class="o">-</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">penup</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">goto</span><span class="p">(</span><span class="n">trunk_x</span><span class="p">,</span> <span class="o">-</span><span class="n">y_edge</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span><span class="o">.</span><span class="n">pendown</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">grow</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span> <span class="mi">140</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="n">noise</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">darken_sky</span><span class="p">(</span><span class="n">noise_factor</span><span class="p">:</span> <span class="nb">float</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Manages a gradual darkening of sky squares.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">sky_color</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">value</span> <span class="o">-</span> <span class="n">noise_factor</span> <span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">COLOR_SKY_LIGHT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fit_color</span><span class="p">(</span><span class="n">sky_color</span><span class="p">,</span> <span class="n">maximum_rgb</span><span class="o">=</span><span class="n">COLOR_SKY_DARK</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">lighten_trunk</span><span class="p">(</span><span class="n">length_factor</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Manages a gradual lightening of the trunk&#39;s color.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">color_factor</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="n">length_factor</span>
</span></span><span class="line"><span class="cl">    <span class="n">trunk_color</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">value</span> <span class="o">+</span> <span class="n">color_factor</span> <span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">COLOR_TRUNK_BASE</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">fit_color</span><span class="p">(</span><span class="n">trunk_color</span><span class="p">,</span> <span class="n">minimum_rgb</span><span class="o">=</span><span class="n">COLOR_TRUNK_LIGHT</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Draw a tree.&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">turtle</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="n">set_theme</span><span class="p">(</span><span class="n">screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">,</span> <span class="n">canvas_width</span><span class="o">=</span><span class="mi">1920</span><span class="p">,</span> <span class="n">canvas_height</span><span class="o">=</span><span class="mi">1080</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">draw_sky</span><span class="p">(</span><span class="n">screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">draw_tree</span><span class="p">(</span><span class="n">screen</span><span class="p">,</span> <span class="n">turtle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">tracer</span><span class="p">(</span><span class="kc">True</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">screen</span><span class="o">.</span><span class="n">exitonclick</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">main</span><span class="p">()</span>
</span></span></code></pre></div>]]></content:encoded>
</item>
<item>
  <title>Post: Sepia Hallucination</title>
  <link>https://randomgeekery.org/post/2020/05/sepia-hallucination/</link>
  <pubDate>Sun, 17 May 2020 00:31:47 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/05/sepia-hallucination/</guid>
  <description>via aeon:
Created using a decomposing 35mm print of the crime drama The Bells (1926), the experimental short Light Is Calling (2004) depicts a dreamy encounter between a soldier and a mysterious woman.
Appropriate for late at night on a Saturday.</description>
   <category>post</category> 
   <category>note</category> 
   <category>art</category>  <category>watch</category> 
  <content:encoded><![CDATA[<p>via <a href="https://aeon.co/videos/when-a-decomposing-century-old-film-becomes-a-haunting-meditation-on-memory">aeon</a>:</p>
<blockquote>
<p>Created using a decomposing 35mm print of the crime drama The Bells (1926),
the experimental short Light Is Calling (2004) depicts a dreamy encounter
between a soldier and a mysterious woman.</p>
</blockquote>
<p>Appropriate for late at night on a Saturday.</p>
<p><img src="https://www.youtube.com/watch?v=yx0HzBiaVn4"/></p>
]]></content:encoded>
</item>
<item>
  <title>Post: How Mom stays creative</title>
  <link>https://randomgeekery.org/post/2020/04/how-mom-stays-creative/</link>
  <pubDate>Mon, 20 Apr 2020 21:20:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/04/how-mom-stays-creative/</guid>
  <description>My mom, and her plans
NOTO — the North Topeka Arts &amp; Entertainment District — asked several artists a question in a Facebook post:
What are you doing to stay creative during the COVID-19 outbreak?
My mom — subliminal message: BUY HER ART — gave the best answer:
Designing my post apocalyptic wardrobe, plotting world domination and baking cookies.</description>
   <category>post</category> 
   <category>note</category> 
   <category>life</category>  <category>art</category>  <category>mom</category>  <category>bad-image-captions</category> 
  <content:encoded><![CDATA[<p><img src="/post/2020/04/../../../attachments/img/2020/cover-2020-04-20.jpg" alt="attachments/img/2020/cover-2020-04-20.jpg"/>
My mom, and her plans</p>
<p><a href="https://explorenoto.org/">NOTO</a> — the North Topeka Arts &amp; Entertainment District — asked several artists a question in a <a href="https://www.facebook.com/explorenoto/photos/a.111376888892182/3355542067808965/?type=3&amp;theater">Facebook post</a>:</p>
<blockquote>
<p>What are you doing to stay creative during the COVID-19 outbreak?</p>
</blockquote>
<p>My mom — subliminal message: <a href="https://www.shellybedsaul.com/">BUY HER ART</a> — gave the best <a href="https://www.facebook.com/explorenoto/photos/a.111376888892182/3355542067808965/?type=3&amp;theater">answer</a>:</p>
<blockquote>
<p>Designing my post apocalyptic wardrobe, plotting world domination and baking
cookies.</p>
</blockquote>
]]></content:encoded>
</item>
<item>
  <title>Post: Always got time for Miyazaki</title>
  <link>https://randomgeekery.org/post/2019/12/always-got-time-for-miyazaki/</link>
  <pubDate>Sat, 14 Dec 2019 02:00:00 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/12/always-got-time-for-miyazaki/</guid>
  <description>kaptainkristian demonstrates how sound, animation pacing, background animation, all affect the immersion of a Studio Ghibli film.</description>
   <category>post</category> 
   <category>note</category> 
   <category>watch</category>  <category>art</category> 
  <content:encoded><![CDATA[<p>kaptainkristian demonstrates how sound, animation pacing, background
animation, all affect the immersion of a Studio Ghibli film.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/jM6PPxN1xas" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
]]></content:encoded>
</item>
<item>
  <title>Post: Art Nouveau, Psychedelia, and a Kalevala tangent</title>
  <link>https://randomgeekery.org/post/2019/11/art-nouveau-psychedeilia-and-a-kalevala-tangent/</link>
  <pubDate>Thu, 21 Nov 2019 16:01:50 -0800</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/11/art-nouveau-psychedeilia-and-a-kalevala-tangent/</guid>
  <description>No object was too mundane to be beautiful.
Probably my favorite comment about Art Nouveau.
Whoa. The Wikipedia entry mentions that it was called “Kalevala style” in Finland. Which — looking elsewhere — might be a little off. I mostly see references to National Romanticism, which is a bit of a mixed bag historically speaking. For Finland it was an urge to assert itself as a nation and not just some dirt swapped back and forth between Russia and Sweden.</description>
   <category>post</category> 
   <category>note</category> 
   <category>watch</category>  <category>art</category>  <category>history</category>  <category>i-knew-this</category>  <category>thanks-to-mom</category>  <category>kalevala</category> 
  <content:encoded><![CDATA[<blockquote>
<p>No object was too mundane to be beautiful.</p>
</blockquote>
<p>Probably my favorite comment about <a href="https://en.wikipedia.org/wiki/Art_Nouveau">Art Nouveau</a>.</p>
<p><img src="https://www.youtube.com/watch?v=9vuqI2v2IRs"/></p>
<p>Whoa. The Wikipedia entry mentions that it was called &ldquo;Kalevala style&rdquo; in Finland. Which — looking elsewhere — might be a little off. I mostly see references to <a href="https://en.wikipedia.org/wiki/Romantic_nationalism">National Romanticism</a>, which is a bit of a mixed bag historically speaking. For Finland it was an urge to assert itself as a <em>nation</em> and not just some dirt swapped back and forth between Russia and Sweden. Writing down the <a href="https://en.wikisource.org/wiki/The_Kalevala">Kalevala</a> was a part of that same movement.</p>
<p>And yeah <a href="http://tolkiengateway.net/wiki/Kalevala">JRR Tolkien loved the Kalevala</a>, tying in another piece to hippy culture. I think every bookshelf I saw as a kid had a copy of The Lord of the Rings.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Sweep Leaves Not Lives</title>
  <link>https://randomgeekery.org/post/2019/08/sweep-leaves-not-lives/</link>
  <pubDate>Sat, 10 Aug 2019 09:38:46 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/08/sweep-leaves-not-lives/</guid>
  <description>Somebody scraped the “lives” part off “sweep leaves not lives”
Seattle’s homeless sweeps are contentious to say the least.
From The Seattle Times, on July 9th:
Seattle removed 75% more homeless encampments in the first four months of this year than during the same period in 2018, even with this February’s record snowstorm slowing clean-ups.
John Curley pointed out the NIMBY — “Not In My Backyard” — aspect:
What they’re doing is they’re trying to push them out of view.</description>
   <category>post</category> 
   <category>note</category> 
   <category>seattle</category>  <category>graffiti</category>  <category>art</category>  <category>homelessness</category> 
  <content:encoded><![CDATA[<p><img src="/post/2019/08/../../../attachments/img/2019/cover-2019-08-10.jpg" alt="attachments/img/2019/cover-2019-08-10.jpg"/>
Somebody scraped the &ldquo;lives&rdquo; part off &ldquo;sweep leaves not lives&rdquo;</p>
<p>Seattle&rsquo;s homeless sweeps are contentious to say the least.</p>
<p>From <a href="https://www.seattletimes.com/seattle-news/homeless/on-way-to-long-term-changes-seattle-mayor-jenny-durkan-quietly-clears-homeless-camps/">The Seattle Times</a>, on July 9th:</p>
<blockquote>
<p>Seattle removed 75% more homeless encampments in the first four months of this year than during the same period in 2018, even with this February’s record snowstorm slowing clean-ups.</p>
</blockquote>
<p><a href="https://mynorthwest.com/1445501/seattle-homeless-sweeps-2019/">John Curley</a> pointed out the NIMBY — &ldquo;Not In My Backyard&rdquo; — aspect:</p>
<blockquote>
<p>What they’re doing is they’re trying to push them out of view. So they’re sending them back behind railroad tracks, back behind buildings, back away from the general view.</p>
</blockquote>
<p>Mostly I&rsquo;m curious who&rsquo;d be so offended by this wall art that they&rsquo;d remove part of its message.</p>
]]></content:encoded>
</item>
<item>
  <title>Post: tmux and laundry art</title>
  <link>https://randomgeekery.org/post/2019/07/tmux-and-laundry-art/</link>
  <pubDate>Mon, 15 Jul 2019 17:25:36 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/07/tmux-and-laundry-art/</guid>
  <description>I made a toot and then I realized it’s the sort of thing that should be a note here for the next time I forget.
Sure I got work stuff done today but my biggest accomplishment was getting tmux to show inbox/ISO 8601 time in the status bar.
`set -g status-right &#34;%Y-%m-%dT%H:%M%z&#34;` Might as well share yesterday’s laundry day doodle while I’m at it. Very bright. I blame California.
I drew this while doing laundry Sunday</description>
   <category>post</category> 
   <category>note</category> 
   <category>tmux</category>  <category>art</category>  <category>mine</category>  <category>work-trip</category>  <category>i-have-clean-underwear-now</category>  <category>and-a-proper-timestamp</category>  <category>life-is-good</category> 
  <content:encoded><![CDATA[<p>I made a <a href="https://hackers.town/@randomgeek/102448275832514625">toot</a> and then I realized it&rsquo;s the sort of thing that should be a note here for the next time I forget.</p>
<blockquote>
<p>Sure I got work stuff done today but my biggest accomplishment was getting tmux to show <em>inbox/ISO 8601</em> time in the status bar.</p>
<pre tabindex="0"><code>`set -g status-right &#34;%Y-%m-%dT%H:%M%z&#34;`
</code></pre></blockquote>
<p>Might as well share yesterday&rsquo;s laundry day doodle while I&rsquo;m at it. Very bright. I blame California.</p>
<p><img src="/post/2019/07/../../../attachments/img/2019/cover-2019-07-15.jpg" alt="attachments/img/2019/cover-2019-07-15.jpg"/>
I drew this while doing laundry Sunday</p>
]]></content:encoded>
</item>
<item>
  <title>Post: Artist&#39;s rendition of my sinuses</title>
  <link>https://randomgeekery.org/post/2019/07/artists-rendition-of-my-sinuses/</link>
  <pubDate>Thu, 11 Jul 2019 12:01:10 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2019/07/artists-rendition-of-my-sinuses/</guid>
  <description>Got my allergy meds at least, so I feel better than an hour ago.</description>
   <category>post</category> 
   <category>note</category> 
   <category>art</category>  <category>work-trip</category>  <category>found</category>  <category>ick</category>  <category>me</category>  <category>i-m-ick</category>  <category>the-art-is-not-ick</category>  <category>unless-that-s-cool</category>  <category>now</category> 
  <content:encoded><![CDATA[<p>Got my allergy meds at least, so I feel better than an hour ago.</p>
<p><img src="/post/2019/07/../../../attachments/img/2019/cover-2019-07-11.jpg" alt="attachments/img/2019/cover-2019-07-11.jpg"/></p>
]]></content:encoded>
</item>
</channel>
</rss>
