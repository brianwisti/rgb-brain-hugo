<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>powershellonRandom Geekery</title>
    <link>https://randomgeekery.org/tags/powershell/</link>
    <description>
      Recent contentinpowershell on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Thu, 18 Jun 2020 22:55:00 -0700</lastBuildDate><atom:link href="https://randomgeekery.org/tags/powershell/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Post: My Git CLI Windows setup</title>
  <link>https://randomgeekery.org/post/2020/06/my-git-cli-windows-setup/</link>
  <pubDate>Thu, 18 Jun 2020 22:55:00 -0700</pubDate>
  
  <guid>https://randomgeekery.org/post/2020/06/my-git-cli-windows-setup/</guid>
  <description>For the sake of continuous learning — and so I could use a couple work-related applications that don’t work even with WINE — I decided to spend more time in inbox/Windows. Let’s see if I can comfortably use inbox/Git from PowerShell. I’ll use the OpenSSH for Windows server for key management, since it’s already available on my system.
Setting up Git winget knows about several Git-related packages, so my installation command needs to be specific.</description>
   <category>post</category> 
   <category>post</category> 
   <category>windows</category>  <category>git</category>  <category>powershell</category>  <category>tools</category> 
  <content:encoded><![CDATA[<h2>This was mostly an excuse to get better with PowerShell</h2><p>For the sake of continuous learning — and so I could use a couple work-related applications that don’t work even with <a href="https://winehq.org">WINE</a> — I decided to spend more time in <em>inbox/Windows</em>.  Let’s see if I can comfortably use <em>inbox/Git</em> from <a href="https://docs.microsoft.com/en-us/powershell/">PowerShell</a>.  I’ll use the <a href="https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse">OpenSSH for Windows</a> server for key management, since it’s already available on my system.</p>
<h2 id="setting-up-git">Setting up Git</h2>
<p><a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/">winget</a> knows about several Git-related packages, so my installation command needs to be specific.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-text" data-lang="text"><span class="line"><span class="cl">winget install –exact Git.Git</span></span></code></pre>
</figure><p>The installation puts Git’s <code>cmd</code> folder onto <code>$env:Path</code>, but PowerShellwon’t see that until I refresh the variable.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nv">$env:Path</span> <span class="p">=</span> <span class="p">[</span><span class="no">System.Environment</span><span class="p">]::</span><span class="n">GetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;Path&#34;</span><span class="p">,</span><span class="s2">&#34;Machine&#34;</span><span class="p">)</span> <span class="p">+</span> <span class="s2">&#34;;&#34;</span> <span class="p">+</span> <span class="p">[</span><span class="no">System.Environment</span><span class="p">]::</span><span class="n">GetEnvironmentVariable</span><span class="p">(</span><span class="s2">&#34;Path&#34;</span><span class="p">,</span><span class="s2">&#34;User&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>And there it is!</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-text" data-lang="text"><span class="line"><span class="cl">PS &gt; $env:path -split &#34;;&#34;
</span></span><span class="line"><span class="cl">C:\Windows\system32
</span></span><span class="line"><span class="cl">⋮
</span></span><span class="line"><span class="cl">C:\Program Files\Git\cmd</span></span></code></pre>
</figure><p>I need to start a new session eventually, though.  Can’t go around refreshing my path like that every time I open a new terminal.  Though I suppose I could put this in PowerShell initialization.</p>
<blockquote>
<p><strong>NOTE</strong></p>
<p>I know Git Bash is a thing, but I’m trying to learn Windows — not just paste a comforting layer of UNIX duct tape over everything.  <em>Said while writing a blog post from Vim on WSL 2.</em></p>
</blockquote>
<p><em>Anyways</em>, it looks like <code>ssh-keygen</code> is accessible via PowerShell.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-text" data-lang="text"><span class="line"><span class="cl">PS &gt; ssh-keygen -t rsa -b 4096 -C &#34;brianwisti@pobox.com&#34;
</span></span><span class="line"><span class="cl">Generating public/private rsa key pair.
</span></span><span class="line"><span class="cl">Enter file in which to save the key (C:\Users\brian/.ssh/id_rsa):</span></span></code></pre>
</figure><p>I add an SSH key with the details from <code>C:/Users/brian/.ssh/id_rsa.pub</code>, and check out a repo.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-text" data-lang="text"><span class="line"><span class="cl">PS &gt; git clone ssh://git@git.hackers.town:2222/randomgeek/random-geekery-blog.git
</span></span><span class="line"><span class="cl">Cloning into &#39;random-geekery-blog&#39;...</span></span></code></pre>
</figure><p>That was easy enough.  There are a couple bits missing from my regular Git day, though.</p>
<h2 id="conveniences-with-posh-git">Conveniences with posh-git</h2>
<p>For starters, I enjoy a pretty shell prompt with version control details.
Let’s install the <a href="https://github.com/dahlbyk/posh-git">beta release</a> of <a href="https://www.powershellgallery.com/packages/posh-git/">posh-git</a>.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Install-Module</span> <span class="nb">posh-git</span> <span class="n">-Scope</span> <span class="n">CurrentUser</span> <span class="n">-AllowPrerelease</span> <span class="n">-Force</span></span></span></code></pre>
</figure><figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-text" data-lang="text"><span class="line"><span class="cl">PS C:\Users\brian\Projects\random-geekery-blog&gt; Import-Module posh-git
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">~\Projects\random-geekery-blog [trunk ≡]&gt;</span></span></code></pre>
</figure><p>Lovely! I can customize it later.</p>
<h2 id="getting-an-ssh-agent-with-posh-sshell">Getting an SSH agent with posh-sshell</h2>
<p>I dislike entering my ssh passphrase every time I interact with a version control server.  Need to get some sort of <code>ssh-agent</code> working.</p>
<p>Looks like <a href="https://www.powershellgallery.com/packages/posh-sshell/0.3.1">posh-sshell</a> can help with that?</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Install-Module</span> <span class="nb">posh-sshell</span> <span class="n">-Scope</span> <span class="n">CurrentUser</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-Service</span> <span class="n">-Name</span> <span class="nb">ssh-agent</span> <span class="p">|</span> <span class="nb">Set-Service</span> <span class="n">-StartupType</span> <span class="n">Manual</span></span></span></code></pre>
</figure><p>Of course, I should probably enable the <code>ssh-agent</code> service from an Admin PowerShell session:</p>
<p>I don’t know why &ldquo;Manual.&rdquo; That’s what this <a href="https://stackoverflow.com/a/53606760">Stackoverflow answer</a> said, and it seems to be working.</p>
<p>Over in my PowerShell init, I make sure the new modules are loaded, set some
handy aliases for using my SSH keys, and start the SSH Agent.</p>
<figure class="highlight">
  <figcaption><tt>Documents\PowerShell\profile.ps1</tt></figcaption>
  <pre tabindex="0" class="chroma"
    ><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">Import-Module</span> <span class="nb">posh-git</span> <span class="nb">Import-Module</span> <span class="nb">posh-sshell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Set-Alias</span> <span class="nb">ssh-agent</span> <span class="s2">&#34;</span><span class="nv">$env:WinDir</span><span class="s2">\System32\OpenSSH\ssh-agent.exe&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Set-Alias</span> <span class="nb">ssh-add</span> <span class="s2">&#34;</span><span class="nv">$env:WinDir</span><span class="s2">\System32\OpenSSH\ssh-add.exe&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Start-SshAgent</span> <span class="n">-Quiet</span></span></span></code></pre>
</figure><p>After starting a new session, everything seems successful.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-text" data-lang="text"><span class="line"><span class="cl">~\Projects&gt; ssh-add
</span></span><span class="line"><span class="cl">~\Projects&gt; git clone git@github.com:brianwisti/dotfiles.git
</span></span><span class="line"><span class="cl">Cloning into &#39;dotfiles&#39;...
</span></span><span class="line"><span class="cl">The authenticity of host &#39;github.com (140.82.112.4)&#39; can&#39;t be established.
</span></span><span class="line"><span class="cl">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
</span></span><span class="line"><span class="cl">Are you sure you want to continue connecting (yes/no)?
</span></span><span class="line"><span class="cl">Warning: Permanently added &#39;github.com,140.82.112.4&#39; (RSA) to the list of known hosts.
</span></span><span class="line"><span class="cl">warning: agent returned different signature type ssh-rsa (expected rsa-sha2-512)
</span></span><span class="line"><span class="cl">remote: Enumerating objects: 405, done.
</span></span><span class="line"><span class="cl">remote: Counting objects: 100% (405/405), done.
</span></span><span class="line"><span class="cl">remote: Compressing objects: 100% (228/228), done.
</span></span><span class="line"><span class="cl">remote: Total 1083 (delta 272), reused 299 (delta 172), pack-reused 678 receiving objects:  92% (997/1083)
</span></span><span class="line"><span class="cl">Receiving objects: 100% (1083/1083), 743.31 KiB | 1.83 MiB/s, done.
</span></span><span class="line"><span class="cl">Resolving deltas: 100% (571/571), done.</span></span></code></pre>
</figure><p>Did you see this bit?</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-text" data-lang="text"><span class="line"><span class="cl">Warning: Permanently added &#39;github.com,140.82.112.4&#39; (RSA) to the list of known hosts.
</span></span><span class="line"><span class="cl">warning: agent returned different signature type ssh-rsa (expected rsa-sha2-512)</span></span></code></pre>
</figure><p>That warning is a <a href="https://github.com/PowerShell/Win32-OpenSSH/issues/1551">known issue</a> with OpenSSH on Windows, and
should go away in the next month or two. The bad news: until it’s fixed,
different repository servers handle the mismatch differently. What I noticed
while working through the process that became this post:</p>
<ul>
<li>Github issued the warning but let me continue</li>
<li>A server running Gitea issued the warning and would <em>not</em> let me continue</li>
</ul>
<p>This is significant enough to highlight:</p>
<blockquote>
<p><strong>TIP</strong></p>
<p>If you’re using the Windows OpenSSH server before the 2020 Fall Update, you
may want to skip the <code>ssh-agent</code> bits.</p>
</blockquote>
<p>But other than that, things are working pretty good. Learning is fun!</p>
]]></content:encoded>
</item>
</channel>
</rss>
