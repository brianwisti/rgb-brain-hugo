<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>My awesome configonRandom Geekery</title>
    <link>https://randomgeekery.org/config/linux/awesome/</link>
    <description>
      Recent contentinMy awesome config on Random Geekery
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
      
      <lastBuildDate>Sun, 21 Jan 2024 21:46:53 -0800</lastBuildDate><atom:link href="https://randomgeekery.org/config/linux/awesome/index.xml" rel="self" type="application/rss+xml" /><item>
  <title>Config: My autorun.sh for awesome</title>
  <link>https://randomgeekery.org/config/linux/awesome/autorun.sh/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/autorun.sh/</guid>
  <description>This goes to autorun.sh.
#!/usr/bin/env bash ## run (only once) processes which spawn with the same name function run { if (command -v $1 &amp;&amp; ! pgrep $1); then $@&amp; fi } ## run (only once) processes which spawn with different name if (command -v gnome-keyring-daemon &amp;&amp; ! pgrep gnome-keyring-d); then gnome-keyring-daemon --daemonize --login &amp; fi if (command -v start-pulseaudio-x11 &amp;&amp; ! pgrep pulseaudio); then start-pulseaudio-x11 &amp; fi if (command -v /usr/lib/mate-polkit/polkit-mate-authentication-agent-1 &amp;&amp; !</description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p>This goes to <code>autorun.sh</code>.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/usr/bin/env bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1">## run (only once) processes which spawn with the same name</span>
</span></span><span class="line"><span class="cl"><span class="k">function</span> run <span class="o">{</span>
</span></span><span class="line"><span class="cl">   <span class="k">if</span> <span class="o">(</span><span class="nb">command</span> -v <span class="nv">$1</span> <span class="o">&amp;&amp;</span> ! pgrep <span class="nv">$1</span><span class="o">)</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">     <span class="nv">$@</span><span class="p">&amp;</span>
</span></span><span class="line"><span class="cl">   <span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## run (only once) processes which spawn with different name</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="nb">command</span> -v gnome-keyring-daemon <span class="o">&amp;&amp;</span> ! pgrep gnome-keyring-d<span class="o">)</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    gnome-keyring-daemon --daemonize --login <span class="p">&amp;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="nb">command</span> -v start-pulseaudio-x11 <span class="o">&amp;&amp;</span> ! pgrep pulseaudio<span class="o">)</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    start-pulseaudio-x11 <span class="p">&amp;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="nb">command</span> -v /usr/lib/mate-polkit/polkit-mate-authentication-agent-1 <span class="o">&amp;&amp;</span> ! pgrep polkit-mate-aut<span class="o">)</span> <span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    /usr/lib/mate-polkit/polkit-mate-authentication-agent-1 <span class="p">&amp;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="nb">command</span> -v  xfce4-power-manager <span class="o">&amp;&amp;</span> ! pgrep xfce4-power-man<span class="o">)</span> <span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">    xfce4-power-manager <span class="p">&amp;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#run xfsettingsd</span>
</span></span><span class="line"><span class="cl"><span class="c1">#run nm-applet</span>
</span></span><span class="line"><span class="cl"><span class="c1">#run light-locker</span>
</span></span><span class="line"><span class="cl"><span class="c1">#run xcape -e &#39;Super_L=Super_L|Control_L|Escape&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c1">#run thunar --daemon</span>
</span></span><span class="line"><span class="cl"><span class="c1">#run pa-applet</span>
</span></span><span class="line"><span class="cl"><span class="c1">#run pamac-tray</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## The following are not included in minimal edition by default</span>
</span></span><span class="line"><span class="cl"><span class="c1">## but autorun.sh will pick them up if you install them</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="nb">command</span> -v system-config-printer-applet <span class="o">&amp;&amp;</span> ! pgrep applet.py <span class="o">)</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">  system-config-printer-applet <span class="p">&amp;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">run compton --shadow-exclude <span class="s1">&#39;!focused&#39;</span>
</span></span><span class="line"><span class="cl">run blueman-applet
</span></span><span class="line"><span class="cl"><span class="c1">#run msm_notifier</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
<item>
  <title>Config: My awesome tags.lua</title>
  <link>https://randomgeekery.org/config/linux/awesome/main/tags.lua/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/main/tags.lua/</guid>
  <description>Awesome uses string tags to enumerate and identify virtual desktops.
local awful = require(&#34;awful&#34;) local _M = {} local tag_names = { &#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;, &#34;5&#34; } awful.screen.connect_for_each_screen(function(s) _M[s] = awful.tag(tag_names, s, RC.layouts[1]) end) return _M </description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p>Awesome uses string tags to enumerate and identify virtual desktops.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">awful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">_M</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">tag_names</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&#34;1&#34;</span><span class="p">,</span> <span class="s2">&#34;2&#34;</span><span class="p">,</span> <span class="s2">&#34;3&#34;</span><span class="p">,</span> <span class="s2">&#34;4&#34;</span><span class="p">,</span> <span class="s2">&#34;5&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">awful.screen</span><span class="p">.</span><span class="n">connect_for_each_screen</span><span class="p">(</span><span class="kr">function</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="n">_M</span><span class="p">[</span><span class="n">s</span><span class="p">]</span> <span class="o">=</span> <span class="n">awful.tag</span><span class="p">(</span><span class="n">tag_names</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">RC.layouts</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">return</span> <span class="n">_M</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
<item>
  <title>Config: My awesome theme.lua</title>
  <link>https://randomgeekery.org/config/linux/awesome/main/theme.lua/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/main/theme.lua/</guid>
  <description>Themes define colours, icons, font and wallpapers.
After installing awesome, I can find the default themes under /usr/share/awesome/themes.
The builtin themes that come with every awesome install:
default gtk sky xresources zenburn Load the theme handler.
local gears = require(&#34;gears&#34;) local awful = require(&#34;awful&#34;) local beautiful = require(&#34;beautiful&#34;) I just want to make sure things work. Start with one of the built-in themes and reasonable defaults.
beautiful.init(&#34;/usr/share/awesome/themes/zenburn/theme.lua&#34;) beautiful.font = &#34;Noto Sans Regular 12&#34; beautiful.</description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p>Themes define colours, icons, font and wallpapers.</p>
<p>After installing <code>awesome</code>,
I can find the default themes under <code>/usr/share/awesome/themes</code>.</p>
<p>The builtin themes that come with every awesome install:</p>
<ul>
<li><code>default</code></li>
<li><code>gtk</code></li>
<li><code>sky</code></li>
<li><code>xresources</code></li>
<li><code>zenburn</code></li>
</ul>
<p>Load the theme handler.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">gears</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;gears&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">awful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">beautiful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;beautiful&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>I just want to make sure things work.
Start with one of the built-in themes and reasonable defaults.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">beautiful.init</span><span class="p">(</span><span class="s2">&#34;/usr/share/awesome/themes/zenburn/theme.lua&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">beautiful.font</span> <span class="o">=</span> <span class="s2">&#34;Noto Sans Regular 12&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">beautiful.notification_font</span> <span class="o">=</span> <span class="s2">&#34;Noto Sans Bold 16&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">beautiful.icon_theme</span><span class="o">=</span><span class="s2">&#34;Papirus-Dark&#34;</span></span></span></code></pre>
</figure><p>Set up background wallpaper if there is one — and if the file exists.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kr">if</span> <span class="p">(</span><span class="n">RC.vars</span><span class="p">.</span><span class="n">wallpaper</span><span class="p">)</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">    <span class="kd">local</span> <span class="n">wallpaper</span> <span class="o">=</span> <span class="n">RC.vars</span><span class="p">.</span><span class="n">wallpaper</span>
</span></span><span class="line"><span class="cl">    <span class="kr">if</span> <span class="n">awful.util</span><span class="p">.</span><span class="n">file_readable</span><span class="p">(</span><span class="n">wallpaper</span><span class="p">)</span> <span class="kr">then</span> <span class="n">beautiful.wallpaper</span> <span class="o">=</span> <span class="n">wallpaper</span> <span class="kr">end</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">if</span> <span class="n">beautiful.wallpaper</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">    <span class="kr">for</span> <span class="n">s</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">screen.count</span><span class="p">()</span> <span class="kr">do</span>
</span></span><span class="line"><span class="cl">        <span class="n">gears.wallpaper</span><span class="p">.</span><span class="n">maximized</span><span class="p">(</span><span class="n">beautiful.wallpaper</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span></span></span></code></pre>
</figure><p>Add a signal handler to redraw wallpaper when screen resolution changes.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="kr">function</span> <span class="nf">set_wallpaper</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">if</span> <span class="n">beautiful.wallpaper</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">        <span class="kd">local</span> <span class="n">wallpaper</span> <span class="o">=</span> <span class="n">beautiful.wallpaper</span>
</span></span><span class="line"><span class="cl">        <span class="c1">-- If wallpaper is a function, call it with the screen</span>
</span></span><span class="line"><span class="cl">        <span class="kr">if</span> <span class="n">type</span><span class="p">(</span><span class="n">wallpaper</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&#34;function&#34;</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">            <span class="n">wallpaper</span> <span class="o">=</span> <span class="n">wallpaper</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span>
</span></span><span class="line"><span class="cl">        <span class="n">gears.wallpaper</span><span class="p">.</span><span class="n">maximized</span><span class="p">(</span><span class="n">wallpaper</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">screen.connect_signal</span><span class="p">(</span><span class="s2">&#34;property::geometry&#34;</span><span class="p">,</span> <span class="n">set_wallpaper</span><span class="p">)</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
<item>
  <title>Config: My awesomewm config error-handling.lua</title>
  <link>https://randomgeekery.org/config/linux/awesome/main/error-handling.lua/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/main/error-handling.lua/</guid>
  <description>I’ll need to notify about errors. Loading naughty for its notification function.
local naughty = require(&#34;naughty&#34;) Check if awesome encountered an error during startup and fell back to another config.
Note This code should only ever execute for the fallback config.
if awesome.startup_errors then naughty.notify({ preset = naughty.config.presets.critical, title = &#34;Oops, there were errors during startup!&#34;, text = awesome.startup_errors }) end Handle runtime errors after an otherwise normal startup.
do local in_error = false awesome.</description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p>I&rsquo;ll need to notify about errors.
Loading <em>naughty</em> for its notification function.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">naughty</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;naughty&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>Check if awesome encountered an error during startup and fell back to another config.</p>
<aside class="info">
    <header>
      <h3>Note</h3>
    </header>
<p>This code should only ever execute for the fallback config.</p>
</aside>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kr">if</span> <span class="n">awesome.startup_errors</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">  <span class="n">naughty.notify</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">    <span class="n">preset</span> <span class="o">=</span> <span class="n">naughty.config</span><span class="p">.</span><span class="n">presets.critical</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">title</span> <span class="o">=</span> <span class="s2">&#34;Oops, there were errors during startup!&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">text</span> <span class="o">=</span> <span class="n">awesome.startup_errors</span>
</span></span><span class="line"><span class="cl">  <span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span></span></span></code></pre>
</figure><p>Handle runtime errors after an otherwise normal startup.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kr">do</span>
</span></span><span class="line"><span class="cl">  <span class="kd">local</span> <span class="n">in_error</span> <span class="o">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">  <span class="n">awesome.connect_signal</span><span class="p">(</span><span class="s2">&#34;debug::error&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">(</span><span class="n">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Make sure we don&#39;t go into an endless error loop</span>
</span></span><span class="line"><span class="cl">    <span class="kr">if</span> <span class="n">in_error</span> <span class="kr">then</span> <span class="kr">return</span> <span class="kr">end</span>
</span></span><span class="line"><span class="cl">    <span class="n">in_error</span> <span class="o">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">naughty.notify</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">      <span class="n">preset</span> <span class="o">=</span> <span class="n">naughty.config</span><span class="p">.</span><span class="n">presets.critical</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="n">title</span> <span class="o">=</span> <span class="s2">&#34;Oops, an error happened!&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="n">text</span> <span class="o">=</span> <span class="n">tostring</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="n">in_error</span> <span class="o">=</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl">  <span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
<item>
  <title>Config: My awesomewm config user-variables.lua</title>
  <link>https://randomgeekery.org/config/linux/awesome/main/user-variables.lua/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/main/user-variables.lua/</guid>
  <description>user-variables.lua holds my defaults for other contexts: what terminal to load, which modifier key starts shortcuts, what to edit files with.
Return it as a table that can be held in the global RC table.
local terminal = &#34;wezterm&#34; local editor = os.getenv(&#34;EDITOR&#34;) or &#34;nvim&#34; local editor_cmd = terminal .. &#34; -e &#34; .. editor local _M = { terminal = terminal, editor = editor, editor_cmd = editor_cmd, modkey = &#34;Mod4&#34;, wallpaper = &#34;/usr/share/endeavouros/backgrounds/endeavouros-wallpaper.</description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p><code>user-variables.lua</code> holds my defaults for other contexts:
what terminal to load, which modifier key starts shortcuts, what to edit files with.</p>
<p>Return it as a table that can be held in the global <code>RC</code> table.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">terminal</span> <span class="o">=</span> <span class="s2">&#34;wezterm&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">editor</span> <span class="o">=</span> <span class="n">os.getenv</span><span class="p">(</span><span class="s2">&#34;EDITOR&#34;</span><span class="p">)</span> <span class="ow">or</span> <span class="s2">&#34;nvim&#34;</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">editor_cmd</span> <span class="o">=</span> <span class="n">terminal</span> <span class="o">..</span> <span class="s2">&#34; -e &#34;</span> <span class="o">..</span> <span class="n">editor</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">_M</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">terminal</span> <span class="o">=</span> <span class="n">terminal</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">editor</span> <span class="o">=</span> <span class="n">editor</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">editor_cmd</span> <span class="o">=</span> <span class="n">editor_cmd</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">modkey</span> <span class="o">=</span> <span class="s2">&#34;Mod4&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">wallpaper</span> <span class="o">=</span> <span class="s2">&#34;/usr/share/endeavouros/backgrounds/endeavouros-wallpaper.png&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">return</span> <span class="n">_M</span></span></span></code></pre>
</figure><p><code>Mod4</code> is the Windows key on most keyboards I see.</p>
]]></content:encoded>
</item>
<item>
  <title>Config: My awesomewm layouts.lua</title>
  <link>https://randomgeekery.org/config/linux/awesome/main/layouts.lua/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/main/layouts.lua/</guid>
  <description>awful.layout provides predefined approaches to organizing windows. I specify which ones to use, leaving out those which aren’t useful on my ludicrously wide monitor.
Eventually I need to come up with my own layout, because I can be very fussy.
local awful = require(&#34;awful&#34;) local lain = require(&#34;lain&#34;) Mainly got the lain centerwork in there for my wide monitor. I want to cut down on the total layout selection. I don’t use many of these.</description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p><a href="https://awesomewm.org/apidoc/libraries/awful.layout.html#"><code>awful.layout</code></a> provides predefined approaches to organizing
windows. I specify which ones to use, leaving out those which aren&rsquo;t useful on
my ludicrously wide monitor.</p>
<p>Eventually I need to come up with my own layout, because I can be <em>very</em> fussy.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">awful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">lain</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;lain&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>Mainly got the <em>lain</em> centerwork in there for my wide monitor.
I want to cut down on the total layout selection.
I don&rsquo;t use many of these.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">_M</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">lain.layout</span><span class="p">.</span><span class="n">centerwork</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.floating</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.tile</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.tile</span><span class="p">.</span><span class="n">left</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.fair</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.fair</span><span class="p">.</span><span class="n">horizontal</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.spiral</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.spiral</span><span class="p">.</span><span class="n">dwindle</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.magnifier</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.layout</span><span class="p">.</span><span class="n">suit.corner</span><span class="p">.</span><span class="n">nw</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">return</span> <span class="n">_M</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
<item>
  <title>Config: My awesomewm menu.lua</title>
  <link>https://randomgeekery.org/config/linux/awesome/main/menu.lua/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/main/menu.lua/</guid>
  <description>My awesomewm application menu.
local awful = require(&#34;awful&#34;) local hotkeys_popup = require(&#34;awful.hotkeys_popup&#34;).widget local beautiful = require(&#34;beautiful&#34;) local freedesktop = require(&#34;freedesktop&#34;) local M = {} Awesome-specific actions The most important stuff — interacting with Awesome itself.
M.awesome = { { &#34;hotkeys&#34;, function() hotkeys_popup.show_help(nil, awful.screen.focused()) end }, { &#34;manual&#34;, RC.vars.terminal .. &#34; -e man awesome&#34; }, { &#34;edit config&#34;, RC.vars.editor_cmd .. &#34; &#34; .. awesome.conffile }, { &#34;restart&#34;, awesome.restart }, { &#34;quit&#34;, function() awesome.</description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p>My awesomewm application menu.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">awful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">hotkeys_popup</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful.hotkeys_popup&#34;</span><span class="p">).</span><span class="n">widget</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">beautiful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;beautiful&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">freedesktop</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;freedesktop&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">M</span> <span class="o">=</span> <span class="p">{}</span></span></span></code></pre>
</figure><h2 id="awesome-specific-actions">Awesome-specific actions</h2>
<p>The most important stuff —
interacting with Awesome itself.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">M.awesome</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;hotkeys&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="kr">function</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">      <span class="n">hotkeys_popup.show_help</span><span class="p">(</span><span class="kc">nil</span><span class="p">,</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">focused</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="s2">&#34;manual&#34;</span><span class="p">,</span> <span class="n">RC.vars</span><span class="p">.</span><span class="n">terminal</span> <span class="o">..</span> <span class="s2">&#34; -e man awesome&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="s2">&#34;edit config&#34;</span><span class="p">,</span> <span class="n">RC.vars</span><span class="p">.</span><span class="n">editor_cmd</span> <span class="o">..</span> <span class="s2">&#34; &#34;</span> <span class="o">..</span> <span class="n">awesome.conffile</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="s2">&#34;restart&#34;</span><span class="p">,</span> <span class="n">awesome.restart</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span> <span class="s2">&#34;quit&#34;</span><span class="p">,</span> <span class="kr">function</span><span class="p">()</span> <span class="n">awesome.quit</span><span class="p">()</span> <span class="kr">end</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre>
</figure><h2 id="applications">Applications</h2>
<p>I let <code>freedesktop</code> build the menu via XDG-related settings.
That&rsquo;s the stuff already in my KDE application menu.
It just loads straight over.
I&rsquo;ll put <code>awesome_menu</code> at the top and a quick entry for loading my preferred terminal emulator at the bottom.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">M.main</span> <span class="o">=</span> <span class="n">freedesktop.menu</span><span class="p">.</span><span class="n">build</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">before</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="s2">&#34;awesome&#34;</span><span class="p">,</span> <span class="n">M.awesome</span><span class="p">,</span> <span class="n">beautiful.awesome_icon</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="n">after</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="s2">&#34;Terminal&#34;</span><span class="p">,</span> <span class="n">RC.vars</span><span class="p">.</span><span class="n">terminal</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">return</span> <span class="n">M</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
<item>
  <title>Config: My rc.lua for awesome</title>
  <link>https://randomgeekery.org/config/linux/awesome/rc.lua/</link>
  <pubDate>Sun, 21 Jan 2024 21:46:53 -0800</pubDate>
  
  <guid>https://randomgeekery.org/config/linux/awesome/rc.lua/</guid>
  <description>The source code for my awesome window manager config. It started with the default rc.lua and expanded from there — with frequent checks at My first Awesome and Epsi’s step by step guide.
My awesome config started as a single rc.lua. Breaking this down into modules is an ongoing process.
Require the important libraries If the Lua package manager LuaRocks is installed, make sure that packages installed through it are found (e.</description>
   <category>config</category> 
  
   <category>config</category> 
  <content:encoded><![CDATA[<p>The source code for my <a href="https://awesomewm.org/">awesome</a> window manager config.
It started with the default <code>rc.lua</code> and expanded from there —
with frequent checks at <a href="https://awesomewm.org/apidoc/documentation/07-my-first-awesome.md.html#">My first Awesome</a> and Epsi&rsquo;s <a href="https://epsi-rns.github.io/desktop/2019/06/15/awesome-overview.html">step
by step guide</a>.</p>
<p>My awesome config started as a single <code>rc.lua</code>.
Breaking this down into modules is an ongoing process.</p>
<h2 id="require-the-important-libraries">Require the important libraries</h2>
<p>If the Lua package manager <a href="https://luarocks.org/">LuaRocks</a> is installed, make sure that
packages installed through it are found (e.g. lgi). If LuaRocks is not
installed, do nothing.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">pcall</span><span class="p">(</span><span class="n">require</span><span class="p">,</span> <span class="s2">&#34;luarocks.loader&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>First I load the standard awesome library.</p>
<dl>
<dt><code>gears</code></dt>
<dd>utility library for color parsing and objects</dd>
<dt><code>awful</code></dt>
<dd>everything related to window management</dd>
<dt><code>awful.autofocus</code></dt>
<dd>support for autofocus, I&rsquo;m guessing</dd>
</dl>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">gears</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;gears&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">awful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful.autofocus&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>Then a couple of libraries for widgets and themes.</p>
<dl>
<dt><a href="https://awesomewm.org/apidoc/popups_and_bars/wibox.html#"><code>wibox</code></a></dt>
<dd>Awesome&rsquo;s built-in generic widget framework</dd>
<dt><a href="https://awesomewm.org/apidoc/theme_related_libraries/beautiful.html"><code>beautiful</code></a></dt>
<dd>Awesome&rsquo;s build-in theme library</dd>
</dl>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">wibox</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;wibox&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">beautiful</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;beautiful&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>Libraries for some of the more refined behaviors we expect from a desktop these
days.</p>
<dl>
<dt><a href="https://awesomewm.org/apidoc/libraries/naughty.html#"><code>naughty</code></a></dt>
<dd>notification handling</dd>
<dt><a href="https://awesomewm.org/apidoc/popups_and_bars/menubar.html#"><code>menubar</code></a></dt>
<dd><a href="https://specifications.freedesktop.org/mime-apps-spec/mime-apps-spec-latest.html">XDG</a> application menu</dd>
<dt><a href="https://specifications.freedesktop.org/mime-apps-spec/mime-apps-spec-latest.html"><code>awful.hotkeys_popup</code></a></dt>
<dd>The awesome help widget, explaining the hotkeys currently available</dd>
</dl>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">naughty</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;naughty&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">menubar</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;menubar&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">hotkeys_popup</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful.hotkeys_popup&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>Enable hotkeys help widget for VIM and other apps when client with a matching
name is opened:</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">require</span><span class="p">(</span><span class="s2">&#34;awful.hotkeys_popup.keys&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><h3 id="additional-modules">Additional modules</h3>
<p>Freedesktop so I can have a full application menu.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">freedesktop</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;freedesktop&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p><a href="https://github.com/lcpz/lain">lain</a>&rsquo;s <code>centerwork</code> layout seems be working nice with my ludicrously wide
monitor.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">lain</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;lain&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><h2 id="user-preference-variables">User preference variables</h2>
<p>Refactored to [<code>user-variables.lua</code>][user-variables].</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">RC</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="n">RC.vars</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;main.user-variables&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>I use a couple of values from <code>RC.vars</code> pretty frequently.
May as well pull them into the local namespace.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">editor_cmd</span> <span class="o">=</span> <span class="n">RC.vars</span><span class="p">.</span><span class="n">editor_cmd</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">modkey</span> <span class="o">=</span> <span class="n">RC.vars</span><span class="p">.</span><span class="n">modkey</span></span></span></code></pre>
</figure><h2 id="error-handling">Error handling</h2>
<p>Refactored out to [<code>error-handling.lua</code>][error-handling].</p>
<p>[user-variables]: {{&lt; ref &ldquo;config/linux/awesome/main/user-variables.lua.md&rdquo; &gt;}}
[error-handling]: {{&lt; ref &ldquo;config/linux/awesome/main/error-handling.lua.md&rdquo; &gt;}}</p>
<h2 id="autostart">Autostart</h2>
<p>For <a href="https://github.com/jceb/dex">dex</a>.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">awful.spawn</span><span class="p">.</span><span class="n">with_shell</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="s1">&#39;systemctl --user start autostart.target&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span></span></span></code></pre>
</figure><h2 id="widgets">Widgets</h2>
<p>Pavel Makhov&rsquo;s <a href="https://pavelmakhov.com/awesome-wm-widgets/">Awesome WM Widgets</a> has several
goodies.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">//- clone the Awesome WM Widgets repo
</span></span><span class="line"><span class="cl">git clone <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  git@github.com:streetturtle/awesome-wm-widgets.git <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  ~/.config/awesome/awesome-wm-widgets</span></span></code></pre>
</figure><p>I&rsquo;ll start with the volume widget.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">volume_widget</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;awesome-wm-widgets.volume-widget.volume&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><h3 id="themes">Themes</h3>
<p>Refactored to [<code>theme.lua</code>][theme].</p>
<p>[theme]: {{&lt; ref &ldquo;config/linux/awesome/main/theme.lua.md&rdquo; &gt;}}</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">theme</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;main.theme&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><h3 id="layouts-and-tags">Layouts and tags</h3>
<p>Layouts are defined over in [<code>layouts.lua</code>][layouts].</p>
<p>[layouts]: {{&lt; ref &ldquo;config/linux/awesome/main/layous.lua.md&rdquo; &gt;}}</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">RC.layouts</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;main.layouts&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">awful.layout</span><span class="p">.</span><span class="n">layouts</span> <span class="o">=</span> <span class="n">RC.layouts</span></span></span></code></pre>
</figure><p>Awesome uses string tags to enumerate and identify virtual desktops.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">tags</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;main.tags&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><h2 id="menu">Menu</h2>
<p>A handy-dandy application and system menu so I don&rsquo;t have to define and
memorize hotkeys for <em>everything</em>.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">menu</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;main.menu&#34;</span><span class="p">)</span></span></span></code></pre>
</figure><p>Adding a menu launcher widget.
Because I&rsquo;ll need some way to get <em>at</em> the menu I just loaded.
This goes in by widget bar later.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">menu_launcher</span> <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">launcher</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">image</span> <span class="o">=</span> <span class="n">beautiful.awesome_icon</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">menu</span> <span class="o">=</span> <span class="n">menu.main</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- Menubar configuration</span>
</span></span><span class="line"><span class="cl"><span class="n">menubar.utils</span><span class="p">.</span><span class="n">terminal</span> <span class="o">=</span> <span class="n">RC.vars</span><span class="p">.</span><span class="n">terminal</span> <span class="c1">-- Set the terminal for applications that require it</span></span></span></code></pre>
</figure><h2 id="keyboard-map-indicator-and-switcher">Keyboard map indicator and switcher</h2>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">mykeyboardlayout</span> <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">keyboardlayout</span><span class="p">()</span></span></span></code></pre>
</figure><h2 id="wibar">Wibar</h2>
<p>Create a textclock widget.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">mytextclock</span> <span class="o">=</span> <span class="n">wibox.widget</span><span class="p">.</span><span class="n">textclock</span><span class="p">()</span></span></span></code></pre>
</figure><p>Create a wibox for each screen and add it.</p>
<p>First we need buttons for all the tags.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">taglist_buttons</span> <span class="o">=</span> <span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">1</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="n">t</span><span class="p">:</span><span class="n">view_only</span><span class="p">()</span> <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">({</span> <span class="n">modkey</span> <span class="p">},</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="kr">function</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">if</span> <span class="n">client.focus</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">        <span class="n">client.focus</span><span class="p">:</span><span class="n">move_to_tag</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">end</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl">  <span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">3</span><span class="p">,</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewtoggle</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="n">modkey</span> <span class="p">},</span> <span class="mi">3</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="kr">function</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">if</span> <span class="n">client.focus</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">        <span class="n">client.focus</span><span class="p">:</span><span class="n">toggle_tag</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">end</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl">  <span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">4</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewnext</span><span class="p">(</span><span class="n">t.screen</span><span class="p">)</span> <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">5</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewprev</span><span class="p">(</span><span class="n">t.screen</span><span class="p">)</span> <span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span></span></span></code></pre>
</figure><p>Now we need buttons for all the tasks.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">tasklist_buttons</span> <span class="o">=</span> <span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="p">},</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">if</span> <span class="n">c</span> <span class="o">==</span> <span class="n">client.focus</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">        <span class="n">c.minimized</span> <span class="o">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">      <span class="kr">else</span>
</span></span><span class="line"><span class="cl">        <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;request::activate&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;tasklist&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="kr">end</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl">  <span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="p">},</span> <span class="mi">3</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="kr">function</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">      <span class="n">awful.menu</span><span class="p">.</span><span class="n">client_list</span><span class="p">({</span> <span class="n">theme</span> <span class="o">=</span> <span class="p">{</span> <span class="n">width</span> <span class="o">=</span> <span class="mi">250</span> <span class="p">}</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl">  <span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="p">},</span> <span class="mi">4</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">      <span class="n">awful.client</span><span class="p">.</span><span class="n">focus.byidx</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl">  <span class="p">),</span>
</span></span><span class="line"><span class="cl">  <span class="n">awful.button</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="p">},</span> <span class="mi">5</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">      <span class="n">awful.client</span><span class="p">.</span><span class="n">focus.byidx</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl">  <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span></span></span></code></pre>
</figure><p>Tie everything together for each screen.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">awful.screen</span><span class="p">.</span><span class="n">connect_for_each_screen</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="kr">function</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Create a promptbox for each screen</span>
</span></span><span class="line"><span class="cl">    <span class="n">s.mypromptbox</span> <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">prompt</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Create an imagebox widget which will contain an icon indicating which layout we&#39;re using.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- We need one layoutbox per screen.</span>
</span></span><span class="line"><span class="cl">    <span class="n">s.mylayoutbox</span> <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">layoutbox</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">s.mylayoutbox</span><span class="p">:</span><span class="n">buttons</span><span class="p">(</span><span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                           <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">1</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.layout</span><span class="p">.</span><span class="n">inc</span><span class="p">(</span> <span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                           <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">3</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.layout</span><span class="p">.</span><span class="n">inc</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                           <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">4</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.layout</span><span class="p">.</span><span class="n">inc</span><span class="p">(</span> <span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                           <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">5</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.layout</span><span class="p">.</span><span class="n">inc</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Create a taglist widget</span>
</span></span><span class="line"><span class="cl">    <span class="n">s.mytaglist</span> <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">taglist</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">screen</span>  <span class="o">=</span> <span class="n">s</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">filter</span>  <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">taglist.filter</span><span class="p">.</span><span class="n">all</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">buttons</span> <span class="o">=</span> <span class="n">taglist_buttons</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">-- Create a tasklist widget</span>
</span></span><span class="line"><span class="cl">    <span class="n">s.mytasklist</span> <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">tasklist</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">screen</span>  <span class="o">=</span> <span class="n">s</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">filter</span>  <span class="o">=</span> <span class="n">awful.widget</span><span class="p">.</span><span class="n">tasklist.filter</span><span class="p">.</span><span class="n">currenttags</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">buttons</span> <span class="o">=</span> <span class="n">tasklist_buttons</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="o">//</span> <span class="o">==&gt;</span> <span class="n">Create</span> <span class="n">wibox</span> <span class="kr">for</span> <span class="n">this</span> <span class="n">screen</span><span class="p">.</span>
</span></span><span class="line"><span class="cl">  <span class="kr">end</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span></span></span></code></pre>
</figure><p>Create the wibox and add its widgets. This is where I add the volume control I
required earlier.</p>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="o">//-</span> <span class="n">Create</span> <span class="n">wibox</span> <span class="kr">for</span> <span class="n">this</span> <span class="n">screen</span>
</span></span><span class="line"><span class="cl"><span class="n">s.mywibox</span> <span class="o">=</span> <span class="n">awful.wibar</span><span class="p">({</span> <span class="n">position</span> <span class="o">=</span> <span class="s2">&#34;top&#34;</span><span class="p">,</span> <span class="n">screen</span> <span class="o">=</span> <span class="n">s</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="n">s.mywibox</span><span class="p">:</span><span class="n">setup</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox.layout</span><span class="p">.</span><span class="n">align.horizontal</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="c1">-- Left widgets</span>
</span></span><span class="line"><span class="cl">        <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox.layout</span><span class="p">.</span><span class="n">fixed.horizontal</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">menu_launcher</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">s.mytaglist</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">s.mypromptbox</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="n">s.mytasklist</span><span class="p">,</span> <span class="c1">-- Middle widget</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="c1">-- Right widgets</span>
</span></span><span class="line"><span class="cl">        <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox.layout</span><span class="p">.</span><span class="n">fixed.horizontal</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">mykeyboardlayout</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">wibox.widget</span><span class="p">.</span><span class="n">systray</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">        <span class="n">volume_widget</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">        <span class="n">mytextclock</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">s.mylayoutbox</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre>
</figure><h2 id="mouse-bindings">Mouse bindings</h2>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">root.buttons</span><span class="p">(</span><span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">3</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">menu.main</span><span class="p">:</span><span class="n">toggle</span><span class="p">()</span> <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">4</span><span class="p">,</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewnext</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">5</span><span class="p">,</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewprev</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">))</span></span></span></code></pre>
</figure><h2 id="key-bindings">Key bindings</h2>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="n">global_keys</span> <span class="o">=</span> <span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;s&#34;</span><span class="p">,</span>      <span class="n">hotkeys_popup.show_help</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span><span class="o">=</span><span class="s2">&#34;show help&#34;</span><span class="p">,</span> <span class="n">group</span><span class="o">=</span><span class="s2">&#34;awesome&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;Left&#34;</span><span class="p">,</span>   <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewprev</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;view previous&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;Right&#34;</span><span class="p">,</span>  <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewnext</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;view next&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;Escape&#34;</span><span class="p">,</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">history.restore</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;go back&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;j&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.client</span><span class="p">.</span><span class="n">focus.byidx</span><span class="p">(</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;focus next by index&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;k&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.client</span><span class="p">.</span><span class="n">focus.byidx</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;focus previous by index&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;w&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">menu.main</span><span class="p">:</span><span class="n">show</span><span class="p">()</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;show main menu&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;awesome&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">-- Layout manipulation</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;j&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.client</span><span class="p">.</span><span class="n">swap.byidx</span><span class="p">(</span>  <span class="mi">1</span><span class="p">)</span>    <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;swap with next client by index&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;k&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.client</span><span class="p">.</span><span class="n">swap.byidx</span><span class="p">(</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>    <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;swap with previous client by index&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;j&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">focus_relative</span><span class="p">(</span> <span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;focus the next screen&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;screen&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;k&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">focus_relative</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;focus the previous screen&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;screen&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;u&#34;</span><span class="p">,</span> <span class="n">awful.client</span><span class="p">.</span><span class="n">urgent.jumpto</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;jump to urgent client&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;Tab&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.client</span><span class="p">.</span><span class="n">focus.history</span><span class="p">.</span><span class="n">previous</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="kr">if</span> <span class="n">client.focus</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">                <span class="n">client.focus</span><span class="p">:</span><span class="n">raise</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="kr">end</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;go back&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">-- Standard program</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;Return&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.spawn</span><span class="p">(</span><span class="n">RC.vars</span><span class="p">.</span><span class="n">terminal</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;open a terminal&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;launcher&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;r&#34;</span><span class="p">,</span> <span class="n">awesome.restart</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;reload awesome&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;awesome&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;q&#34;</span><span class="p">,</span> <span class="n">awesome.quit</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;quit awesome&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;awesome&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;l&#34;</span><span class="p">,</span>     <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">incmwfact</span><span class="p">(</span> <span class="mf">0.05</span><span class="p">)</span>          <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;increase master width factor&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;h&#34;</span><span class="p">,</span>     <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">incmwfact</span><span class="p">(</span><span class="o">-</span><span class="mf">0.05</span><span class="p">)</span>          <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;decrease master width factor&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;h&#34;</span><span class="p">,</span>     <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">incnmaster</span><span class="p">(</span> <span class="mi">1</span><span class="p">,</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;increase the number of master clients&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;l&#34;</span><span class="p">,</span>     <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">incnmaster</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;decrease the number of master clients&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;h&#34;</span><span class="p">,</span>     <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">incncol</span><span class="p">(</span> <span class="mi">1</span><span class="p">,</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span>    <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;increase the number of columns&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;l&#34;</span><span class="p">,</span>     <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.tag</span><span class="p">.</span><span class="n">incncol</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="kc">nil</span><span class="p">,</span> <span class="kc">true</span><span class="p">)</span>    <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;decrease the number of columns&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;space&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.layout</span><span class="p">.</span><span class="n">inc</span><span class="p">(</span> <span class="mi">1</span><span class="p">)</span>                <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;select next&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;space&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.layout</span><span class="p">.</span><span class="n">inc</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>                <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;select previous&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;layout&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;n&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">                  <span class="kd">local</span> <span class="n">c</span> <span class="o">=</span> <span class="n">awful.client</span><span class="p">.</span><span class="n">restore</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                  <span class="c1">-- Focus restored client</span>
</span></span><span class="line"><span class="cl">                  <span class="kr">if</span> <span class="n">c</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">                    <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                        <span class="s2">&#34;request::activate&#34;</span><span class="p">,</span> <span class="s2">&#34;key.unminimize&#34;</span><span class="p">,</span> <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">                    <span class="p">)</span>
</span></span><span class="line"><span class="cl">                  <span class="kr">end</span>
</span></span><span class="line"><span class="cl">              <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;restore minimized&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">-- Prompt</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span> <span class="p">},</span>            <span class="s2">&#34;r&#34;</span><span class="p">,</span>     <span class="kr">function</span> <span class="p">()</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">focused</span><span class="p">().</span><span class="n">mypromptbox</span><span class="p">:</span><span class="n">run</span><span class="p">()</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;run prompt&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;launcher&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span> <span class="p">},</span> <span class="s2">&#34;x&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">                  <span class="n">awful.prompt</span><span class="p">.</span><span class="n">run</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">prompt</span>       <span class="o">=</span> <span class="s2">&#34;Run Lua code: &#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="n">textbox</span>      <span class="o">=</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">focused</span><span class="p">().</span><span class="n">mypromptbox.widget</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="n">exe_callback</span> <span class="o">=</span> <span class="n">awful.util</span><span class="p">.</span><span class="n">eval</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="n">history_path</span> <span class="o">=</span> <span class="n">awful.util</span><span class="p">.</span><span class="n">get_cache_dir</span><span class="p">()</span> <span class="o">..</span> <span class="s2">&#34;/history_eval&#34;</span>
</span></span><span class="line"><span class="cl">                  <span class="p">}</span>
</span></span><span class="line"><span class="cl">              <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;lua execute prompt&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;awesome&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Menubar</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span> <span class="p">},</span> <span class="s2">&#34;p&#34;</span><span class="p">,</span> <span class="kr">function</span><span class="p">()</span> <span class="n">menubar.show</span><span class="p">()</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;show the menubar&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;launcher&#34;</span><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">clientkeys</span> <span class="o">=</span> <span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;f&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">c.fullscreen</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">c.fullscreen</span>
</span></span><span class="line"><span class="cl">            <span class="n">c</span><span class="p">:</span><span class="n">raise</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;toggle fullscreen&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;c&#34;</span><span class="p">,</span>      <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c</span><span class="p">:</span><span class="n">kill</span><span class="p">()</span>                         <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;close&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;space&#34;</span><span class="p">,</span>  <span class="n">awful.client</span><span class="p">.</span><span class="n">floating.toggle</span>                     <span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;toggle floating&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;Return&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c</span><span class="p">:</span><span class="n">swap</span><span class="p">(</span><span class="n">awful.client</span><span class="p">.</span><span class="n">getmaster</span><span class="p">())</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;move to master&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;o&#34;</span><span class="p">,</span>      <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c</span><span class="p">:</span><span class="n">move_to_screen</span><span class="p">()</span>               <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;move to screen&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;t&#34;</span><span class="p">,</span>      <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c.ontop</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">c.ontop</span>            <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">              <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;toggle keep on top&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;n&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="c1">-- The client currently has the input focus, so it cannot be</span>
</span></span><span class="line"><span class="cl">            <span class="c1">-- minimized, since minimized clients can&#39;t have the focus.</span>
</span></span><span class="line"><span class="cl">            <span class="n">c.minimized</span> <span class="o">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span> <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;minimize&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span>           <span class="p">},</span> <span class="s2">&#34;m&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">c.maximized</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">c.maximized</span>
</span></span><span class="line"><span class="cl">            <span class="n">c</span><span class="p">:</span><span class="n">raise</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span> <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;(un)maximize&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;m&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">c.maximized_vertical</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">c.maximized_vertical</span>
</span></span><span class="line"><span class="cl">            <span class="n">c</span><span class="p">:</span><span class="n">raise</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span> <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;(un)maximize vertically&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">}),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">({</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span>   <span class="p">},</span> <span class="s2">&#34;m&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">c.maximized_horizontal</span> <span class="o">=</span> <span class="ow">not</span> <span class="n">c.maximized_horizontal</span>
</span></span><span class="line"><span class="cl">            <span class="n">c</span><span class="p">:</span><span class="n">raise</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span> <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;(un)maximize horizontally&#34;</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;client&#34;</span><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- Bind all key numbers to tags.</span>
</span></span><span class="line"><span class="cl"><span class="c1">-- Be careful: we use keycodes to make it work on any keyboard layout.</span>
</span></span><span class="line"><span class="cl"><span class="c1">-- This should map on the top row of your keyboard, usually 1 to 9.</span>
</span></span><span class="line"><span class="cl"><span class="kr">for</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">9</span> <span class="kr">do</span>
</span></span><span class="line"><span class="cl">  <span class="n">global_keys</span> <span class="o">=</span> <span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">global_keys</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- View tag only.</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="n">modkey</span> <span class="p">},</span> <span class="s2">&#34;#&#34;</span> <span class="o">..</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">9</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kd">local</span> <span class="n">screen</span> <span class="o">=</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">focused</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kd">local</span> <span class="n">tag</span> <span class="o">=</span> <span class="n">screen.tags</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="kr">if</span> <span class="n">tag</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">          <span class="n">tag</span><span class="p">:</span><span class="n">view_only</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span>
</span></span><span class="line"><span class="cl">      <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;view tag #&#34;</span><span class="o">..</span><span class="n">i</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Toggle tag display.</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;#&#34;</span> <span class="o">..</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">9</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kd">local</span> <span class="n">screen</span> <span class="o">=</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">focused</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kd">local</span> <span class="n">tag</span> <span class="o">=</span> <span class="n">screen.tags</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="kr">if</span> <span class="n">tag</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">          <span class="n">awful.tag</span><span class="p">.</span><span class="n">viewtoggle</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span>
</span></span><span class="line"><span class="cl">      <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;toggle tag #&#34;</span> <span class="o">..</span> <span class="n">i</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;=&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="kr">function</span> <span class="p">()</span> <span class="n">lain.util</span><span class="p">.</span><span class="n">useless_gaps_resize</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;increase window gaps on tag #&#34;</span> <span class="o">..</span> <span class="n">i</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span> <span class="p">},</span> <span class="s2">&#34;-&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="kr">function</span> <span class="p">()</span> <span class="n">lain.util</span><span class="p">.</span><span class="n">useless_gaps_resize</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;decrease window gaps on tag #&#34;</span> <span class="o">..</span> <span class="n">i</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Move client to tag.</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span> <span class="p">},</span> <span class="s2">&#34;#&#34;</span> <span class="o">..</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">9</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">if</span> <span class="n">client.focus</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">          <span class="kd">local</span> <span class="n">tag</span> <span class="o">=</span> <span class="n">client.focus</span><span class="p">.</span><span class="n">screen.tags</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">          <span class="kr">if</span> <span class="n">tag</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">            <span class="n">client.focus</span><span class="p">:</span><span class="n">move_to_tag</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">          <span class="kr">end</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span>
</span></span><span class="line"><span class="cl">      <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;move focused client to tag #&#34;</span><span class="o">..</span><span class="n">i</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Toggle tag on focused client.</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.key</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span> <span class="n">modkey</span><span class="p">,</span> <span class="s2">&#34;Control&#34;</span><span class="p">,</span> <span class="s2">&#34;Shift&#34;</span> <span class="p">},</span> <span class="s2">&#34;#&#34;</span> <span class="o">..</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">9</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="kr">function</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="kr">if</span> <span class="n">client.focus</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">          <span class="kd">local</span> <span class="n">tag</span> <span class="o">=</span> <span class="n">client.focus</span><span class="p">.</span><span class="n">screen.tags</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">          <span class="kr">if</span> <span class="n">tag</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">            <span class="n">client.focus</span><span class="p">:</span><span class="n">toggle_tag</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">          <span class="kr">end</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span>
</span></span><span class="line"><span class="cl">      <span class="kr">end</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="p">{</span><span class="n">description</span> <span class="o">=</span> <span class="s2">&#34;toggle focused client on tag #&#34;</span> <span class="o">..</span> <span class="n">i</span><span class="p">,</span> <span class="n">group</span> <span class="o">=</span> <span class="s2">&#34;tag&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">clientbuttons</span> <span class="o">=</span> <span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">1</span><span class="p">,</span> <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s2">&#34;request::activate&#34;</span><span class="p">,</span> <span class="s2">&#34;mouse_click&#34;</span><span class="p">,</span> <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.button</span><span class="p">({</span> <span class="n">modkey</span> <span class="p">},</span> <span class="mi">1</span><span class="p">,</span> <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s2">&#34;request::activate&#34;</span><span class="p">,</span> <span class="s2">&#34;mouse_click&#34;</span><span class="p">,</span> <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">})</span>
</span></span><span class="line"><span class="cl">        <span class="n">awful.mouse</span><span class="p">.</span><span class="n">client.move</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">    <span class="n">awful.button</span><span class="p">({</span> <span class="n">modkey</span> <span class="p">},</span> <span class="mi">3</span><span class="p">,</span> <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s2">&#34;request::activate&#34;</span><span class="p">,</span> <span class="s2">&#34;mouse_click&#34;</span><span class="p">,</span> <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">})</span>
</span></span><span class="line"><span class="cl">        <span class="n">awful.mouse</span><span class="p">.</span><span class="n">client.resize</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- Set keys</span>
</span></span><span class="line"><span class="cl"><span class="n">root.keys</span><span class="p">(</span><span class="n">global_keys</span><span class="p">)</span></span></span></code></pre>
</figure><h2 id="rules">Rules</h2>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- Rules to apply to new clients (through the &#34;manage&#34; signal).</span>
</span></span><span class="line"><span class="cl"><span class="n">awful.rules</span><span class="p">.</span><span class="n">rules</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- All clients will match this rule.</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="n">rule</span> <span class="o">=</span> <span class="p">{</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="n">properties</span> <span class="o">=</span> <span class="p">{</span> <span class="n">border_width</span> <span class="o">=</span> <span class="n">beautiful.border_width</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">border_color</span> <span class="o">=</span> <span class="n">beautiful.border_normal</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">focus</span> <span class="o">=</span> <span class="n">awful.client</span><span class="p">.</span><span class="n">focus.filter</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">keys</span> <span class="o">=</span> <span class="n">clientkeys</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">buttons</span> <span class="o">=</span> <span class="n">clientbuttons</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">screen</span> <span class="o">=</span> <span class="n">awful.screen</span><span class="p">.</span><span class="n">preferred</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                     <span class="n">placement</span> <span class="o">=</span> <span class="n">awful.placement</span><span class="p">.</span><span class="n">no_overlap</span><span class="o">+</span><span class="n">awful.placement</span><span class="p">.</span><span class="n">no_offscreen</span>
</span></span><span class="line"><span class="cl">     <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">-- Floating clients.</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="n">rule_any</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">instance</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;DTA&#34;</span><span class="p">,</span>  <span class="c1">-- Firefox addon DownThemAll.</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;copyq&#34;</span><span class="p">,</span>  <span class="c1">-- Includes session name in class.</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;pinentry&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="n">class</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Arandr&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Blueman-manager&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Gpick&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Kruler&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;MessageWin&#34;</span><span class="p">,</span>  <span class="c1">-- kalarm.</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Sxiv&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Tor Browser&#34;</span><span class="p">,</span> <span class="c1">-- Needs a fixed window size to avoid fingerprinting by screen size.</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Wpa_gui&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;veromix&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;xtightvncviewer&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="c1">-- Note that the name property shown in xprop might be set slightly after creation of the client</span>
</span></span><span class="line"><span class="cl">        <span class="c1">-- and the name shown there might not match defined rules here.</span>
</span></span><span class="line"><span class="cl">        <span class="n">name</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;Event Tester&#34;</span><span class="p">,</span>  <span class="c1">-- xev.</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="n">role</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;AlarmWindow&#34;</span><span class="p">,</span>  <span class="c1">-- Thunderbird&#39;s calendar.</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;ConfigManager&#34;</span><span class="p">,</span>  <span class="c1">-- Thunderbird&#39;s about:config.</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;pop-up&#34;</span><span class="p">,</span>       <span class="c1">-- e.g. Google Chrome&#39;s (detached) Developer Tools.</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span> <span class="n">properties</span> <span class="o">=</span> <span class="p">{</span> <span class="n">floating</span> <span class="o">=</span> <span class="kc">true</span> <span class="p">}},</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">-- Add titlebars to normal clients and dialogs</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span> <span class="n">rule_any</span> <span class="o">=</span> <span class="p">{</span><span class="n">type</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&#34;normal&#34;</span><span class="p">,</span> <span class="s2">&#34;dialog&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span> <span class="n">properties</span> <span class="o">=</span> <span class="p">{</span> <span class="n">titlebars_enabled</span> <span class="o">=</span> <span class="kc">true</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">-- Set Firefox to always map on the tag named &#34;2&#34; on screen 1.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- { rule = { class = &#34;Firefox&#34; },</span>
</span></span><span class="line"><span class="cl">    <span class="c1">--   properties = { screen = 1, tag = &#34;2&#34; } },</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre>
</figure><h2 id="signals">Signals</h2>
<figure class="highlight">
  <pre tabindex="0" class="chroma"
    ><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- Signal function to execute when a new client appears.</span>
</span></span><span class="line"><span class="cl"><span class="n">client.connect_signal</span><span class="p">(</span><span class="s2">&#34;manage&#34;</span><span class="p">,</span> <span class="kr">function</span> <span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- Set the windows at the slave,</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- i.e. put it at the end of others instead of setting it master.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- if not awesome.startup then awful.client.setslave(c) end</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kr">if</span> <span class="n">awesome.startup</span>
</span></span><span class="line"><span class="cl">      <span class="ow">and</span> <span class="ow">not</span> <span class="n">c.size_hints</span><span class="p">.</span><span class="n">user_position</span>
</span></span><span class="line"><span class="cl">      <span class="ow">and</span> <span class="ow">not</span> <span class="n">c.size_hints</span><span class="p">.</span><span class="n">program_position</span> <span class="kr">then</span>
</span></span><span class="line"><span class="cl">        <span class="c1">-- Prevent clients from being unreachable after screen count changes.</span>
</span></span><span class="line"><span class="cl">        <span class="n">awful.placement</span><span class="p">.</span><span class="n">no_offscreen</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="kr">end</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- Add a titlebar if titlebars_enabled is set to true in the rules.</span>
</span></span><span class="line"><span class="cl"><span class="n">client.connect_signal</span><span class="p">(</span><span class="s2">&#34;request::titlebars&#34;</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">-- buttons for the titlebar</span>
</span></span><span class="line"><span class="cl">    <span class="kd">local</span> <span class="n">buttons</span> <span class="o">=</span> <span class="n">gears.table</span><span class="p">.</span><span class="n">join</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">1</span><span class="p">,</span> <span class="kr">function</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s2">&#34;request::activate&#34;</span><span class="p">,</span> <span class="s2">&#34;titlebar&#34;</span><span class="p">,</span> <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">})</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.mouse</span><span class="p">.</span><span class="n">client.move</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">        <span class="n">awful.button</span><span class="p">({</span> <span class="p">},</span> <span class="mi">3</span><span class="p">,</span> <span class="kr">function</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s2">&#34;request::activate&#34;</span><span class="p">,</span> <span class="s2">&#34;titlebar&#34;</span><span class="p">,</span> <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">true</span><span class="p">})</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.mouse</span><span class="p">.</span><span class="n">client.resize</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">awful.titlebar</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="p">:</span> <span class="n">setup</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="c1">-- Left</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.titlebar</span><span class="p">.</span><span class="n">widget.iconwidget</span><span class="p">(</span><span class="n">c</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="n">buttons</span> <span class="o">=</span> <span class="n">buttons</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">layout</span>  <span class="o">=</span> <span class="n">wibox.layout</span><span class="p">.</span><span class="n">fixed.horizontal</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="c1">-- Middle</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span> <span class="c1">-- Title</span>
</span></span><span class="line"><span class="cl">                <span class="n">align</span>  <span class="o">=</span> <span class="s2">&#34;center&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="n">widget</span> <span class="o">=</span> <span class="n">awful.titlebar</span><span class="p">.</span><span class="n">widget.titlewidget</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="n">buttons</span> <span class="o">=</span> <span class="n">buttons</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">layout</span>  <span class="o">=</span> <span class="n">wibox.layout</span><span class="p">.</span><span class="n">flex.horizontal</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span> <span class="c1">-- Right</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.titlebar</span><span class="p">.</span><span class="n">widget.floatingbutton</span> <span class="p">(</span><span class="n">c</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.titlebar</span><span class="p">.</span><span class="n">widget.maximizedbutton</span><span class="p">(</span><span class="n">c</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.titlebar</span><span class="p">.</span><span class="n">widget.stickybutton</span>   <span class="p">(</span><span class="n">c</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.titlebar</span><span class="p">.</span><span class="n">widget.ontopbutton</span>    <span class="p">(</span><span class="n">c</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="n">awful.titlebar</span><span class="p">.</span><span class="n">widget.closebutton</span>    <span class="p">(</span><span class="n">c</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox.layout</span><span class="p">.</span><span class="n">fixed.horizontal</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="n">layout</span> <span class="o">=</span> <span class="n">wibox.layout</span><span class="p">.</span><span class="n">align.horizontal</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- Enable sloppy focus, so that focus follows mouse.</span>
</span></span><span class="line"><span class="cl"><span class="n">client.connect_signal</span><span class="p">(</span><span class="s2">&#34;mouse::enter&#34;</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">c</span><span class="p">:</span><span class="n">emit_signal</span><span class="p">(</span><span class="s2">&#34;request::activate&#34;</span><span class="p">,</span> <span class="s2">&#34;mouse_enter&#34;</span><span class="p">,</span> <span class="p">{</span><span class="n">raise</span> <span class="o">=</span> <span class="kc">false</span><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">client.connect_signal</span><span class="p">(</span><span class="s2">&#34;focus&#34;</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c.border_color</span> <span class="o">=</span> <span class="n">beautiful.border_focus</span> <span class="kr">end</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">client.connect_signal</span><span class="p">(</span><span class="s2">&#34;unfocus&#34;</span><span class="p">,</span> <span class="kr">function</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="n">c.border_color</span> <span class="o">=</span> <span class="n">beautiful.border_normal</span> <span class="kr">end</span><span class="p">)</span></span></span></code></pre>
</figure>]]></content:encoded>
</item>
</channel>
</rss>
